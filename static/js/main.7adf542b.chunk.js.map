{"version":3,"sources":["ultis/functions.js","components/GlobalModal/index.js","ultis/api.js","pages/SignIn/redux/actions.js","pages/SignIn/redux/epics.js","pages/Dashboard/redux/actions.js","pages/Dashboard/redux/epics.js","core/epic.js","pages/Dashboard/constant.js","pages/Dashboard/redux/reducer.js","pages/SignIn/redux/reducer.js","core/reducer.js","core/store.js","components/CInput/index.jsx","assets/images/forgot_password.jpg","assets/logo.png","pages/ForgotPassword/index.jsx","components/Header/index.jsx","pages/Home/index.jsx","assets/images/signin.png","pages/SignIn/index.jsx","assets/images/signup.png","pages/SignUp/index.jsx","pages/CreatePassword/index.jsx","pages/VerifyEmail/index.jsx","pages/Dashboard/component/addCategory.jsx","pages/Dashboard/component/searchInput.js","pages/Dashboard/component/categoryList.jsx","pages/Dashboard/component/coursesList.jsx","pages/Dashboard/component/teacherList.jsx","pages/Dashboard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["history","createHashHistory","forceRefresh","COLOR","MODAL_TYPE","ROLES","Object","freeze","STUDENT","TEACHER","ADMIN","NOT_VERIFIED","Text","Typography","GlobalModal","props","closeModal","instance","setState","isShow","handleOk","state","onPress","handleCancel","title","content","type","visible","centered","onOk","onCancel","footer","onClick","size","React","Component","alertMessage","iTitle","iContent","iType","request","param","url","parameters","token","store","getState","Auth","headers","accept","Authorization","from","axios","timeout","method","data","params","catch","error","Promise","resolve","response","pipe","map","result","tap","JSON","stringify","log","SignInRequest","defineAction","SignInRequestSuccess","SignInRequestFailed","SignUpRequest","SignUpRequestSuccess","SignUpRequestFailed","ResetPassword","ResetPasswordSuccess","ResetPasswordFailed","CreatePassword","CreatePasswordSuccess","CreatePasswordFailed","VerifyEmail","VerifyEmailSuccess","VerifyEmailFailed","SignOut","authEpics","combineEpics","action$","ofType","exhaustMap","action","payload","status","authenticated","get","message","catchError","dispatch","replace","SetCurrentPage","GetAllCategories","GetAllCategoriesSuccess","GetAllCategoriesFailed","AddCategory","AddCategorySuccess","AddCategoryFailed","UpdateCategory","UpdateCategorySuccess","UpdateCategoryFailed","DeleteCategory","DeleteCategorySuccess","DeleteCategoryFailed","dashboardEpics","id","rootEpic","PAGE","initialState","isLoading","isLoadingDashboard","currentPage","detailPage","categoryList","refreshToken","user","rootReducer","combineReducers","accessToken","Dashboard","router","connectRouter","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","routerMiddleware","persistConfig","logger","key","storage","persistedReducer","persistReducer","createStore","compose","run","persistor","persistStore","CInput","style","width","marginBottom","className","ForgotPassword","useHistory","useDispatch","useSelector","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","useEffect","validationSchema","yup","shape","email","trim","max","label","required","handleForgot","values","toLowerCase","href","textDecoration","color","src","logo","alt","initialValues","isInitialValid","onSubmit","handleChange","handleBlur","handleSubmit","isValid","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","onKeyPress","event","handleKeyPress","alignSelf","padding","push","pathname","disabled","backgroundImage","forgotPic","Header","avatar","icon","UserOutlined","borderRadius","Home","display","justifyContent","alignItems","flex","backgroundColor","SignIn","role","location","goBack","password","min","matches","handleLogin","signinPic","SignUp","fullName","handleSignup","signupPic","CreatePasswordPage","useParams","confirm","oneOf","handleCreate","marginTop","VerifyEmailPage","paddingTop","Option","Select","firstError","AddCategoryModal","realList","category","filter","item","name","parentId","nullable","onClose","destroyOnClose","handleAdd","setFieldValue","span","justify","marginRight","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","ref","e","target","onPressEnter","handleSearch","SearchOutlined","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","includes","onFilterDropdownVisibleChange","setTimeout","current","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","loadingIcon","LoadingOutlined","fontSize","spin","CategoryList","useState","useRef","forEach","parent","subCategory","length","subCat","edit","setEdit","categoryColumns","sorter","a","b","localeCompare","EditOutlined","handleEdit","DeleteOutlined","Modal","okText","cancelText","okButtonProps","destroyAll","handleDelete","indicator","PlusCircleOutlined","columns","dataSource","CoursesList","TeacherList","defaultSelectedKeys","mode","onSelect","keyPath","domEvent","Item","borderColor","renderRightDashboard","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","locale","viVN","loading","Provider","verticalAlign","document","getElementById"],"mappings":"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","file":"static/js/main.7adf542b.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory({ forceRefresh: true })\r\n\r\nexport const DOMAIN = 'https://coursedo.herokuapp.com/api'\r\nexport const __DEV__ = false\r\n\r\nexport const LIMIT_ITEMS = 12\r\nexport const COLOR = {\r\n  primary1: '#FF8A00',\r\n  primary2: '#FFC000',\r\n  mainBlack: '#5C5C5C',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport const MODAL_TYPE = {\r\n  NORMAL: 'NORMAL',\r\n  CHOICE: 'CHOICE'\r\n}\r\n\r\nexport const ROLES = Object.freeze({\r\n  STUDENT: 0,\r\n  TEACHER: 1,\r\n  ADMIN: 2,\r\n  NOT_VERIFIED: 3\r\n})\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map(i =>\r\n          ['string', 'number'].indexOf(typeof i) === -1\r\n            ? JSON.stringify(i, null, ' ')\r\n            : i\r\n        )\r\n        .join(' ')\r\n    )\r\n  }\r\n}\r\n","import { Modal, Typography, Button } from 'antd'\r\nimport React from 'react'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\n\r\nconst { Text } = Typography\r\n\r\nexport default class GlobalModal extends React.Component {\r\n  static instance = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    GlobalModal.instance = this\r\n    this.state = {\r\n      isShow: false,\r\n      title: '',\r\n      content: '',\r\n      type: MODAL_TYPE.NORMAL,\r\n      onPress: () => {}\r\n    }\r\n  }\r\n\r\n  static alertMessage = (\r\n    iTitle = 'Information',\r\n    iContent = 'An unexpected error has occured. Try again later.',\r\n    iType = MODAL_TYPE.NORMAL,\r\n    onPress = () => {}\r\n  ) => {\r\n    GlobalModal.instance.setState({\r\n      isShow: true,\r\n      title: iTitle,\r\n      content: iContent,\r\n      type: iType,\r\n      onPress\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    GlobalModal.instance.setState({ isShow: false })\r\n  }\r\n\r\n  handleOk = () => {\r\n    GlobalModal.instance.state.onPress()\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  handleCancel = () => {\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title={GlobalModal.instance.state.title}\r\n        visible={GlobalModal.instance.state.isShow}\r\n        centered\r\n        onOk={GlobalModal.instance.handleOk}\r\n        onCancel={GlobalModal.instance.handleCancel}\r\n        footer={\r\n          GlobalModal.instance.state.type === MODAL_TYPE.NORMAL\r\n            ? [\r\n                <Button\r\n                  key=\"okButton\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                  size=\"large\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n            : [\r\n                <Button\r\n                  key=\"cancelButton\"\r\n                  onClick={GlobalModal.instance.handleCancel}\r\n                  size=\"large\"\r\n                >\r\n                  Hủy\r\n                </Button>,\r\n                <Button\r\n                  key=\"okButton\"\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n        }\r\n      >\r\n        <Text>{GlobalModal.instance.state.content}</Text>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { store } from 'core/store'\r\nimport { from } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\nimport { DOMAIN, log as SysLog } from 'ultis/functions'\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi'\r\n  const parameters = param.param\r\n  const token = store.getState().Auth.token\r\n  const headers = token\r\n    ? {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language,\r\n        Authorization: token\r\n      }\r\n    : {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language\r\n      }\r\n\r\n  return from(\r\n    axios\r\n      .request({\r\n        url,\r\n        timeout: 15000,\r\n        headers,\r\n        method: param.method || 'POST',\r\n        data: parameters,\r\n        ...(param.method === 'GET'\r\n          ? { params: parameters, data: {} }\r\n          : { data: parameters })\r\n      })\r\n      .catch(error => {\r\n        return Promise.resolve(error.response)\r\n      })\r\n  ).pipe(\r\n    map(result => {\r\n      return result\r\n    }),\r\n    tap(result => log(url, parameters, result))\r\n  )\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------'\r\n  )\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const SignInRequest = defineAction('SIGNIN_REQUEST')\r\nexport const SignInRequestSuccess = defineAction('SIGNIN_REQUEST_SUCCESS')\r\nexport const SignInRequestFailed = defineAction('SIGNIN_REQUEST_FAILED')\r\n\r\nexport const SignUpRequest = defineAction('SIGNUP_REQUEST')\r\nexport const SignUpRequestSuccess = defineAction('SIGNUP_REQUEST_SUCCESS')\r\nexport const SignUpRequestFailed = defineAction('SIGNUP_REQUEST_FAILED')\r\n\r\nexport const ResetPassword = defineAction('RESET_PASSWORD_REQUEST')\r\nexport const ResetPasswordSuccess = defineAction('RESET_PASSWORD_SUCCESS')\r\nexport const ResetPasswordFailed = defineAction('RESET_PASSWORD_FAILED')\r\n\r\nexport const CreatePassword = defineAction('CREATE_PASSWORD_REQUEST')\r\nexport const CreatePasswordSuccess = defineAction('CREATE_PASSWORD_SUCCESS')\r\nexport const CreatePasswordFailed = defineAction('CREATE_PASSWORD_FAILED')\r\n\r\nexport const VerifyEmail = defineAction('VERIFY_EMAIL')\r\nexport const VerifyEmailSuccess = defineAction('VERIFY_EMAIL_SUCCESS')\r\nexport const VerifyEmailFailed = defineAction('VERIFY_EMAIL_FAILED')\r\n\r\nexport const SignOut = defineAction('SIGNOUT_REQUEST')\r\n","import GlobalModal from 'components/GlobalModal'\r\nimport { replace } from 'connected-react-router'\r\nimport { store } from 'core/store'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\nimport {\r\n  CreatePassword,\r\n  CreatePasswordFailed,\r\n  CreatePasswordSuccess,\r\n  ResetPassword,\r\n  ResetPasswordFailed,\r\n  ResetPasswordSuccess,\r\n  SignInRequest,\r\n  SignInRequestFailed,\r\n  SignInRequestSuccess,\r\n  SignUpRequest,\r\n  SignUpRequestFailed,\r\n  SignUpRequestSuccess,\r\n  VerifyEmail,\r\n  VerifyEmailFailed,\r\n  VerifyEmailSuccess\r\n} from './actions'\r\n\r\nconst signinEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignInRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/login',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200 && result.data?.authenticated) {\r\n            return SignInRequestSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage(\r\n            'Information',\r\n            'Email or password may not correct. Please try again.'\r\n          )\r\n          return SignInRequestFailed.get(result.data.message)\r\n        }),\r\n        catchError(error => {\r\n          return SignInRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst signupEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignUpRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/signup',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 201) {\r\n            store.dispatch(replace('/signin', { from: '/signup' }))\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              'Sign up succeed. Please sign in to continue.'\r\n            )\r\n            return SignUpRequestSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return SignUpRequestFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return SignUpRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst resetPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(ResetPassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/resetPassword',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/'))\r\n            )\r\n            return ResetPasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return ResetPasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return ResetPasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst createPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(CreatePassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/createPassword',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/signin'))\r\n            )\r\n            return CreatePasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return CreatePasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return CreatePasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst verifyEmailEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(VerifyEmail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/verifyEmail',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/'))\r\n            )\r\n            return VerifyEmailSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return VerifyEmailFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return VerifyEmailFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nexport const authEpics = combineEpics(\r\n  signinEpic$,\r\n  signupEpic$,\r\n  resetPasswordEpic$,\r\n  createPasswordEpic$,\r\n  verifyEmailEpic$\r\n)\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const SetCurrentPage = defineAction('SET_CURRENT_PAGE')\r\n\r\nexport const GetAllCategories = defineAction('GET_CATEGORIES_REQUEST')\r\nexport const GetAllCategoriesSuccess = defineAction('GET_CATEGORIES_SUCCESS')\r\nexport const GetAllCategoriesFailed = defineAction('GET_CATEGORIES_FAILED')\r\n\r\nexport const AddCategory = defineAction('ADD_CATEGORY_REQUEST')\r\nexport const AddCategorySuccess = defineAction('ADD_CATEGORY_SUCCESS')\r\nexport const AddCategoryFailed = defineAction('ADD_CATEGORY_FAILED')\r\n\r\nexport const UpdateCategory = defineAction('UPDATE_CATEGORY_REQUEST')\r\nexport const UpdateCategorySuccess = defineAction('UPDATE_CATEGORY_SUCCESS')\r\nexport const UpdateCategoryFailed = defineAction('UPDATE_CATEGORY_FAILED')\r\n\r\nexport const DeleteCategory = defineAction('DELETE_CATEGORY_REQUEST')\r\nexport const DeleteCategorySuccess = defineAction('DELETE_CATEGORY_SUCCESS')\r\nexport const DeleteCategoryFailed = defineAction('DELETE_CATEGORY_FAILED')\r\n","import GlobalModal from 'components/GlobalModal'\r\nimport { store } from 'core/store'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport {\r\n  AddCategory,\r\n  AddCategoryFailed,\r\n  AddCategorySuccess,\r\n  DeleteCategory,\r\n  DeleteCategoryFailed,\r\n  DeleteCategorySuccess,\r\n  GetAllCategories,\r\n  GetAllCategoriesFailed,\r\n  GetAllCategoriesSuccess,\r\n  UpdateCategory,\r\n  UpdateCategoryFailed,\r\n  UpdateCategorySuccess\r\n} from './actions'\r\n\r\nconst getCategoriesEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(GetAllCategories.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'category'\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            return GetAllCategoriesSuccess.get(result.data)\r\n          }\r\n          return GetAllCategoriesFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return GetAllCategoriesFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst addCategoryEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(AddCategory.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'category',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 201) {\r\n            store.dispatch(GetAllCategories.get())\r\n            return AddCategorySuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return AddCategoryFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return AddCategoryFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst updateCategoryEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(UpdateCategory.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'PATCH',\r\n        url: `category/${action.payload.id}`,\r\n        param: action.payload.data\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetAllCategories.get())\r\n            return UpdateCategorySuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return UpdateCategoryFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return UpdateCategoryFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst deleteCategoryEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(DeleteCategory.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'DELETE',\r\n        url: `category/${action.payload}`\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 204) {\r\n            store.dispatch(GetAllCategories.get())\r\n            return DeleteCategorySuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return DeleteCategoryFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return DeleteCategoryFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nexport const dashboardEpics = combineEpics(\r\n  getCategoriesEpic$,\r\n  addCategoryEpic$,\r\n  updateCategoryEpic$,\r\n  deleteCategoryEpic$\r\n)\r\n","import { combineEpics } from 'redux-observable'\r\nimport { authEpics } from 'pages/SignIn/redux/epics'\r\nimport { dashboardEpics } from 'pages/Dashboard/redux/epics'\r\n\r\nexport const rootEpic = combineEpics(authEpics, dashboardEpics)\r\n","export const PAGE = {\r\n  CATEGORY: 'CATEGORY',\r\n  COURSE: 'COURSE',\r\n  STUDENT: 'STUDENT',\r\n  TEACHER: 'TEACHER'\r\n}\r\n","import { PAGE } from 'pages/Dashboard/constant'\r\nimport { SignOut } from 'pages/SignIn/redux/actions'\r\nimport {\r\n  GetAllCategories,\r\n  GetAllCategoriesFailed,\r\n  GetAllCategoriesSuccess,\r\n  SetCurrentPage\r\n} from './actions'\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingDashboard: false,\r\n  currentPage: PAGE.CATEGORY,\r\n  detailPage: null,\r\n  categoryList: []\r\n}\r\n\r\nexport function dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GetAllCategories.type:\r\n      return { ...state, isLoading: true }\r\n    case GetAllCategoriesSuccess.type:\r\n      return { ...state, categoryList: action.payload, isLoading: false }\r\n    case GetAllCategoriesFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetCurrentPage.type:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload.currentPage,\r\n        detailPage: action.payload.detailPage\r\n      }\r\n    case SignOut.type:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SignInRequestSuccess, SignOut } from './actions'\r\nconst initialState = {\r\n  token: null,\r\n  refreshToken: null,\r\n  user: null\r\n}\r\n\r\nexport function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SignInRequestSuccess.type:\r\n      return {\r\n        ...state,\r\n        token: action.payload.accessToken,\r\n        refreshToken: action.payload.refreshToken,\r\n        user: action.payload\r\n      }\r\n    case SignOut.type:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { connectRouter } from 'connected-react-router'\r\nimport { dashboardReducer } from 'pages/Dashboard/redux/reducer'\r\nimport { authReducer } from 'pages/SignIn/redux/reducer'\r\nimport { combineReducers } from 'redux'\r\nimport { history } from 'ultis/functions'\r\n\r\nexport const rootReducer = combineReducers({\r\n  Auth: authReducer,\r\n  Dashboard: dashboardReducer,\r\n  router: connectRouter(history)\r\n})\r\n","import { routerMiddleware } from 'connected-react-router'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { history, __DEV__ } from 'ultis/functions'\r\nimport { rootEpic } from './epic'\r\nimport { rootReducer } from './reducer'\r\n\r\nconst epicMiddleware = createEpicMiddleware()\r\n\r\nconst applyMiddlewarePro = applyMiddleware(\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\nconst applyMiddlewareDev = applyMiddleware(\r\n  logger,\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  __DEV__ ? compose(applyMiddlewareDev) : compose(applyMiddlewarePro)\r\n)\r\n\r\nepicMiddleware.run(rootEpic)\r\n\r\nexport const persistor = persistStore(store)\r\n","import { Input } from 'antd'\r\nimport 'pages/SignIn/signin.css'\r\nimport React from 'react'\r\n\r\nfunction CInput(props) {\r\n  return (\r\n    <div style={{ width: '100%', marginBottom: 12 }}>\r\n      <Input {...props} />\r\n      {props.error && <span className=\"errorStyle\">{props.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CInput\r\n","export default __webpack_public_path__ + \"static/media/forgot_password.88496ed7.jpg\";","export default __webpack_public_path__ + \"static/media/logo.19a91f5e.png\";","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { ResetPassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleForgot = values => {\r\n    dispatch(\r\n      ResetPassword.get({\r\n        ...values,\r\n        email: values.email.toLowerCase()\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleForgot(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"forgot\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleForgot(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Ok let’s fetch you ya’ login details\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/forgot` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Back to Sign Up\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Proceed\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import { Avatar, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './header.css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Header(props) {\r\n  const user = useSelector(state => state.Auth.user)\r\n  const history = useHistory()\r\n  return (\r\n    <div id=\"headerView\">\r\n      <span id=\"logoText\">coursedo</span>\r\n      {user ? (\r\n        user?.avatar ? (\r\n          <Avatar size={48} src={user?.avatar} />\r\n        ) : (\r\n          <Avatar size={48} icon={<UserOutlined />} />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ borderRadius: 50 }}\r\n          onClick={() =>\r\n            history.push({\r\n              pathname: '/signin',\r\n              state: { from: `/` }\r\n            })\r\n          }\r\n        >\r\n          Sign in\r\n        </Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { Button } from 'antd'\r\nimport GlobalModal from 'components/GlobalModal'\r\nimport Header from 'components/Header'\r\nimport { SignOut } from 'pages/SignIn/redux/actions'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { history, MODAL_TYPE } from 'ultis/functions'\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flex: 1,\r\n          backgroundColor: 'white'\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => {\r\n            GlobalModal.alertMessage('Information', 'Ha ha', MODAL_TYPE.CHOICE)\r\n          }}\r\n        >\r\n          Mở modal\r\n        </Button>\r\n        <Button type=\"primary\" onClick={() => history.push('/signup')}>\r\n          Đăng ký\r\n        </Button>\r\n        <Button onClick={() => history.push('/signin')}>Đăng nhập</Button>\r\n        <Button onClick={() => dispatch(SignOut.get())}>Log out</Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/signin.07d692eb.png\";","import { Button } from 'antd'\r\nimport signinPic from 'assets/images/signin.png'\r\nimport logo from 'assets/logo.png'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport { SignInRequest } from './redux/actions'\r\nimport './signin.css'\r\n\r\nfunction SignIn() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user.role === ROLES.ADMIN) {\r\n        history.replace('/admin')\r\n      } else {\r\n        if (history.location.state) {\r\n          history.goBack()\r\n        } else {\r\n          history.replace('/')\r\n        }\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleLogin = values => {\r\n    dispatch(\r\n      SignInRequest.get({ ...values, email: values.email.toLowerCase() })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleLogin(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signin\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleLogin(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Sign in to your account to continue\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div className=\"buttomBox\">\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() => history.push('/forgot')}\r\n                    >\r\n                      Forgot password?\r\n                    </Button>\r\n                    <div>\r\n                      <span>Don’t have an account? </span>\r\n                      <Button\r\n                        style={{ padding: 0 }}\r\n                        color=\"primary\"\r\n                        type=\"link\"\r\n                        onClick={() => history.push('/signup')}\r\n                      >\r\n                        Sign up\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signinPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","export default __webpack_public_path__ + \"static/media/signup.46c9af80.png\";","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { SignUpRequest } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport signupPic from 'assets/images/signup.png'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction SignUp() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email'),\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    fullName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Please input password')\r\n      .min(3, 'Full name must include at least 3 characters')\r\n      .max(64, 'Full name must include at most 48 characters')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Invalid full name'\r\n        }\r\n      )\r\n  })\r\n\r\n  const handleSignup = values => {\r\n    dispatch(\r\n      SignUpRequest.get({\r\n        ...values,\r\n        email: values.email.toLowerCase(),\r\n        role: ROLES.NOT_VERIFIED\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleSignup(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signup\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              fullName: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleSignup(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Please create a new account here</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.fullName}\r\n                    onChange={handleChange('fullName')}\r\n                    onTouchStart={() => setFieldTouched('fullName')}\r\n                    onBlur={handleBlur('fullName')}\r\n                    placeholder=\"Full name\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.fullName}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/signup` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signupPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { CreatePassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction CreatePasswordPage() {\r\n  const param = useParams()\r\n  const { token } = param\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user || !token) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    confirm: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      })\r\n      .oneOf(\r\n        [yup.ref('password'), null],\r\n        'Confirm password must be the same as password'\r\n      )\r\n  })\r\n\r\n  const handleCreate = values => {\r\n    dispatch(\r\n      CreatePassword.get({\r\n        password: values.password,\r\n        token: token\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleCreate(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"logo\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              confirm: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleCreate(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Input new password to continue</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.password}\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"New password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.confirm}\r\n                    onChange={handleChange('confirm')}\r\n                    onTouchStart={() => setFieldTouched('confirm')}\r\n                    onBlur={handleBlur('confirm')}\r\n                    placeholder=\"Confirm password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.confirm}\r\n                    type=\"password\"\r\n                  />\r\n                  <Button\r\n                    style={{ marginTop: 24 }}\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Reset password\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePasswordPage\r\n","import { Space, Spin } from 'antd'\r\nimport { VerifyEmail } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../SignIn/signin.css'\r\n\r\nfunction VerifyEmailPage() {\r\n  const param = useParams()\r\n  const { token } = param\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(VerifyEmail.get({ token }))\r\n  }, [])\r\n\r\n  return (\r\n    <Space\r\n      style={{ display: 'flex', justifyContent: 'center', paddingTop: 48 }}\r\n    >\r\n      <Spin size=\"large\" />\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default VerifyEmailPage\r\n","import { Button, Col, Row, Select } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as yup from 'yup'\r\nimport { AddCategory, UpdateCategory } from '../redux/actions'\r\n\r\nconst { Option } = Select\r\n\r\nconst firstError = {\r\n  name: '* You must enter name of category'\r\n}\r\n\r\nfunction AddCategoryModal(props) {\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const realList = props.category\r\n    ? categoryList.filter(item => item.id !== props.category?.id)\r\n    : categoryList\r\n  const dispatch = useDispatch()\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .trim()\r\n      .required(firstError.name)\r\n      .matches(/^[a-zA-Z\\s]+$/, {\r\n        message: 'Category name cannot contain special characters'\r\n      }),\r\n    parentId: yup.number().nullable()\r\n  })\r\n\r\n  const handleAdd = values => {\r\n    if (props.category) {\r\n      dispatch(UpdateCategory.get({ id: props.category.id, data: values }))\r\n    } else {\r\n      dispatch(AddCategory.get(values))\r\n    }\r\n    props?.onClose()\r\n  }\r\n\r\n  const onCancel = () => {\r\n    props?.onClose()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={props.category ? 'Update category' : 'Add new category'}\r\n      visible={props.visible || false}\r\n      onCancel={onCancel}\r\n      centered\r\n      destroyOnClose={true}\r\n      footer={false}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          parentId: props.category?.parentId || null,\r\n          name: props.category?.name || ''\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => handleAdd(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n          setFieldValue\r\n        }) => {\r\n          return (\r\n            <Form>\r\n              <Row style={{ marginBottom: 16 }}>\r\n                <Col span={8}>Name</Col>\r\n                <Col span={16}>\r\n                  <CInput\r\n                    value={values.name}\r\n                    onChange={handleChange('name')}\r\n                    onTouchStart={() => setFieldTouched('name')}\r\n                    onBlur={handleBlur('name')}\r\n                    placeholder=\"Name\"\r\n                    error={errors.name}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ marginBottom: 32 }}>\r\n                <Col span={8}>Parent</Col>\r\n                <Col span={16}>\r\n                  <Select\r\n                    style={{ width: '100%' }}\r\n                    value={values.parentId}\r\n                    onChange={value => setFieldValue('parentId', value)}\r\n                  >\r\n                    <Option value={null}>\r\n                      Do not select to create parent category\r\n                    </Option>\r\n                    {realList.map(item => (\r\n                      <Option key={`cate${item.id}`} value={item.id}>\r\n                        {item.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n              <Row justify=\"end\">\r\n                <Button\r\n                  style={{ marginRight: 16 }}\r\n                  size=\"large\"\r\n                  onClick={onCancel}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  disabled={!isValid}\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {props.category ? 'Update' : 'Add'}\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          )\r\n        }}\r\n      </Formik>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddCategoryModal\r\n","import { SearchOutlined } from '@ant-design/icons'\r\nimport { Button, Input, Space } from 'antd'\r\n\r\nimport React from 'react'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { COLOR } from 'ultis/functions'\r\n\r\nexport const getColumnSearchProps = (\r\n  dataIndex,\r\n  searchPlaceholder,\r\n  searchText,\r\n  setSearchText,\r\n  searchedColumn,\r\n  setSearchColumn,\r\n  refInput\r\n) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={refInput}\r\n          placeholder={searchPlaceholder}\r\n          value={selectedKeys[0]}\r\n          onChange={e =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            handleSearch(\r\n              selectedKeys,\r\n              confirm,\r\n              dataIndex,\r\n              setSearchText,\r\n              setSearchColumn\r\n            )\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() =>\r\n              handleSearch(\r\n                selectedKeys,\r\n                confirm,\r\n                dataIndex,\r\n                setSearchText,\r\n                setSearchColumn\r\n              )\r\n            }\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Find\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters, setSearchText)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <SearchOutlined\r\n        style={{ color: filtered ? COLOR.primary1 : undefined }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select())\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n        text\r\n      )\r\n  }\r\n}\r\n\r\nconst handleSearch = (\r\n  selectedKeys,\r\n  confirm,\r\n  dataIndex,\r\n  setSearchText,\r\n  setSearchColumn\r\n) => {\r\n  confirm()\r\n  setSearchColumn(dataIndex)\r\n  setSearchText(selectedKeys[0])\r\n}\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters()\r\n  setSearchText('')\r\n}\r\n","import {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusCircleOutlined\r\n} from '@ant-design/icons'\r\nimport { Button, Modal, Space, Spin, Table } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { COLOR } from 'ultis/functions'\r\nimport '../dashboard.css'\r\nimport { DeleteCategory, GetAllCategories } from '../redux/actions'\r\nimport AddCategoryModal from './addCategory'\r\nimport { getColumnSearchProps } from './searchInput'\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction CategoryList() {\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const isLoading = useSelector(state => state.Dashboard.isLoading)\r\n  const dispatch = useDispatch()\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n  let realList = []\r\n  categoryList.forEach(item => {\r\n    realList.push({\r\n      name: item.name,\r\n      parent: null,\r\n      id: item.id,\r\n      parentId: item.parentId\r\n    })\r\n    item?.subCategory &&\r\n      item?.subCategory.length > 0 &&\r\n      item?.subCategory.forEach(subCat => {\r\n        realList.push({\r\n          name: subCat.name,\r\n          parent: item.name,\r\n          id: subCat.id,\r\n          parentId: subCat.parentId\r\n        })\r\n      })\r\n  })\r\n  const [edit, setEdit] = useState({ isShow: false, category: null })\r\n\r\n  useEffect(() => {\r\n    dispatch(GetAllCategories.get())\r\n  }, [])\r\n\r\n  const onAddNewCategory = () => {\r\n    setEdit({ isShow: true, category: null })\r\n  }\r\n\r\n  const handleEdit = (value, record) => {\r\n    setEdit({ isShow: true, category: record })\r\n  }\r\n\r\n  const handleDelete = record => {\r\n    Modal.confirm({\r\n      title: 'Confirm',\r\n      icon: <DeleteOutlined style={{ color: COLOR.primary1 }} />,\r\n      content: 'Do you confirm to delete this category?',\r\n      okText: 'Confirm',\r\n      cancelText: 'Cancel',\r\n      centered: true,\r\n      okButtonProps: { style: { backgroundColor: COLOR.primary1 } },\r\n      onOk: () => {\r\n        dispatch(DeleteCategory.get(record.id))\r\n        Modal.destroyAll()\r\n      }\r\n    })\r\n  }\r\n\r\n  const categoryColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'name',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Title',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: (a, b) => a.name.localeCompare(b.name)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'parent',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Parent',\r\n      dataIndex: 'parent',\r\n      key: 'parent',\r\n      sorter: (a, b) => a.parent.localeCompare(b.parent)\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: '#FF0000' }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\">Categories</span>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusCircleOutlined />}\r\n          style={{ width: 200, marginBottom: 32 }}\r\n          onClick={() => onAddNewCategory()}\r\n          size=\"large\"\r\n        >\r\n          Add new category\r\n        </Button>\r\n        <Table columns={categoryColumns} dataSource={realList} />\r\n      </div>\r\n      <AddCategoryModal\r\n        visible={edit.isShow}\r\n        onClose={() => {\r\n          setEdit({ isShow: false, category: null })\r\n        }}\r\n        category={edit.category}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryList\r\n","import {\r\n  DeleteOutlined,\r\n  LoadingOutlined,\r\n  PlusCircleOutlined\r\n} from '@ant-design/icons'\r\nimport { Button, Modal, Space, Spin, Table } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { COLOR } from 'ultis/functions'\r\nimport '../dashboard.css'\r\nimport { getColumnSearchProps } from './searchInput'\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction CoursesList() {\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const isLoading = useSelector(state => state.Dashboard.isLoading)\r\n  const dispatch = useDispatch()\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n  let realList = []\r\n  categoryList.forEach(item => {\r\n    realList.push({\r\n      name: item.name,\r\n      parent: null,\r\n      id: item.id,\r\n      parentId: item.parentId\r\n    })\r\n    item?.subCategory &&\r\n      item?.subCategory.length > 0 &&\r\n      item?.subCategory.forEach(subCat => {\r\n        realList.push({\r\n          name: subCat.name,\r\n          parent: item.name,\r\n          id: subCat.id,\r\n          parentId: subCat.parentId\r\n        })\r\n      })\r\n  })\r\n  const [edit, setEdit] = useState({ isShow: false, category: null })\r\n\r\n  useEffect(() => {\r\n    // dispatch(GetAllCategories.get())\r\n  }, [])\r\n\r\n  const onAddNewCategory = () => {\r\n    setEdit({ isShow: true, category: null })\r\n  }\r\n\r\n  const handleDelete = record => {\r\n    Modal.confirm({\r\n      title: 'Confirm',\r\n      icon: <DeleteOutlined style={{ color: COLOR.primary1 }} />,\r\n      content: 'Do you confirm to delete this category?',\r\n      okText: 'Confirm',\r\n      cancelText: 'Cancel',\r\n      centered: true,\r\n      okButtonProps: { style: { backgroundColor: COLOR.primary1 } },\r\n      onOk: () => {\r\n        // dispatch(DeleteCategory.get(record.id))\r\n        Modal.destroyAll()\r\n      }\r\n    })\r\n  }\r\n\r\n  const categoryColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'name',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Title',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: (a, b) => a.name.localeCompare(b.name)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'parent',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Parent',\r\n      dataIndex: 'parent',\r\n      key: 'parent',\r\n      sorter: (a, b) => a.parent.localeCompare(b.parent)\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: '#FF0000' }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\">Categories</span>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusCircleOutlined />}\r\n          style={{ width: 200, marginBottom: 32 }}\r\n          onClick={() => onAddNewCategory()}\r\n          size=\"large\"\r\n        >\r\n          Add new category\r\n        </Button>\r\n        <Table columns={categoryColumns} dataSource={realList} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CoursesList\r\n","import {\r\n  DeleteOutlined,\r\n  LoadingOutlined,\r\n  PlusCircleOutlined\r\n} from '@ant-design/icons'\r\nimport { Button, Modal, Space, Spin, Table } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { COLOR } from 'ultis/functions'\r\nimport '../dashboard.css'\r\nimport { getColumnSearchProps } from './searchInput'\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction TeacherList() {\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const isLoading = useSelector(state => state.Dashboard.isLoading)\r\n  const dispatch = useDispatch()\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n  let realList = []\r\n  categoryList.forEach(item => {\r\n    realList.push({\r\n      name: item.name,\r\n      parent: null,\r\n      id: item.id,\r\n      parentId: item.parentId\r\n    })\r\n    item?.subCategory &&\r\n      item?.subCategory.length > 0 &&\r\n      item?.subCategory.forEach(subCat => {\r\n        realList.push({\r\n          name: subCat.name,\r\n          parent: item.name,\r\n          id: subCat.id,\r\n          parentId: subCat.parentId\r\n        })\r\n      })\r\n  })\r\n  const [edit, setEdit] = useState({ isShow: false, category: null })\r\n\r\n  useEffect(() => {\r\n    // dispatch(GetAllCategories.get())\r\n  }, [])\r\n\r\n  const onAddNewCategory = () => {\r\n    setEdit({ isShow: true, category: null })\r\n  }\r\n\r\n  const handleDelete = record => {\r\n    Modal.confirm({\r\n      title: 'Confirm',\r\n      icon: <DeleteOutlined style={{ color: COLOR.primary1 }} />,\r\n      content: 'Do you confirm to delete this category?',\r\n      okText: 'Confirm',\r\n      cancelText: 'Cancel',\r\n      centered: true,\r\n      okButtonProps: { style: { backgroundColor: COLOR.primary1 } },\r\n      onOk: () => {\r\n        // dispatch(DeleteCategory.get(record.id))\r\n        Modal.destroyAll()\r\n      }\r\n    })\r\n  }\r\n\r\n  const categoryColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'name',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Title',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: (a, b) => a.name.localeCompare(b.name)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'parent',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Parent',\r\n      dataIndex: 'parent',\r\n      key: 'parent',\r\n      sorter: (a, b) => a.parent.localeCompare(b.parent)\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: '#FF0000' }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\">Categories</span>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusCircleOutlined />}\r\n          style={{ width: 200, marginBottom: 32 }}\r\n          onClick={() => onAddNewCategory()}\r\n          size=\"large\"\r\n        >\r\n          Add new category\r\n        </Button>\r\n        <Table columns={categoryColumns} dataSource={realList} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeacherList\r\n","import { LoadingOutlined, UserOutlined } from '@ant-design/icons'\r\nimport { Avatar, Button, Menu, Spin } from 'antd'\r\nimport { SignOut } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { FaChalkboardTeacher } from 'react-icons/fa'\r\nimport { FiBookOpen, FiGrid, FiUsers } from 'react-icons/fi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { COLOR, ROLES } from 'ultis/functions'\r\nimport CategoryList from './component/categoryList'\r\nimport CoursesList from './component/coursesList'\r\nimport TeacherList from './component/teacherList'\r\nimport { PAGE } from './constant'\r\nimport './dashboard.css'\r\nimport { SetCurrentPage } from './redux/actions'\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth.user)\r\n  const isLoadingDashboard = useSelector(\r\n    state => state.Dashboard.isLoadingDashboard\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!user || user?.role !== ROLES.ADMIN) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const currentPage = useSelector(state => state.Dashboard.currentPage)\r\n\r\n  const onMenuSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\r\n    dispatch(SetCurrentPage.get({ currentPage: key }))\r\n  }\r\n\r\n  const handleSignOut = () => {\r\n    dispatch(SignOut.get())\r\n    history.replace('/')\r\n  }\r\n\r\n  const renderRightDashboard = () => {\r\n    switch (currentPage) {\r\n      case PAGE.CATEGORY:\r\n        return <CategoryList />\r\n      case PAGE.COURSE:\r\n        return <CoursesList />\r\n      case PAGE.TEACHER:\r\n        return <TeacherList />\r\n      case PAGE.STUDENT:\r\n        return <TeacherList />\r\n      default:\r\n        return <CategoryList />\r\n    }\r\n  }\r\n\r\n  if (isLoadingDashboard) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div id=\"dashboardBg\">\r\n      <div id=\"menuContainer\">\r\n        {user?.avatar ? (\r\n          <Avatar size={100} src={user?.avatar} />\r\n        ) : (\r\n          <Avatar size={100} icon={<UserOutlined />} />\r\n        )}\r\n        <span id=\"adminName\">{user.fullName ? user.fullName : 'Admin'}</span>\r\n        <Menu\r\n          defaultSelectedKeys={[PAGE.CATEGORY]}\r\n          selectedKeys={[currentPage]}\r\n          mode=\"inline\"\r\n          onSelect={onMenuSelect}\r\n          style={{ backgroundColor: COLOR.primary1 }}\r\n        >\r\n          <Menu.Item\r\n            style={{ color: 'white' }}\r\n            className=\"customItem\"\r\n            key={PAGE.CATEGORY}\r\n            icon={<FiGrid size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Categories\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: 'white' }}\r\n            className=\"customItem\"\r\n            key={PAGE.COURSE}\r\n            icon={<FiBookOpen size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Courses\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: 'white' }}\r\n            className=\"customItem\"\r\n            key={PAGE.TEACHER}\r\n            icon={<FaChalkboardTeacher size={14} style={{ marginRight: 8 }} />}\r\n          >\r\n            Teachers\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: 'white' }}\r\n            className=\"customItem\"\r\n            key={PAGE.STUDENT}\r\n            icon={<FiUsers size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Students\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Button\r\n          type=\"ghost\"\r\n          style={{\r\n            width: '80%',\r\n            marginTop: 64,\r\n            borderColor: 'white',\r\n            borderRadius: 8,\r\n            color: 'white'\r\n          }}\r\n          onClick={() => handleSignOut()}\r\n        >\r\n          Log out\r\n        </Button>\r\n      </div>\r\n      {renderRightDashboard()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import ForgotPassword from 'pages/ForgotPassword'\nimport Home from 'pages/Home'\nimport SignIn from 'pages/SignIn'\nimport SignUp from 'pages/SignUp'\nimport CreatePasswordPage from 'pages/CreatePassword'\nimport VerifyEmailPage from 'pages/VerifyEmail'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { history } from 'ultis/functions'\nimport './App.less'\nimport Dashboard from 'pages/Dashboard'\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route path=\"/forgot\" component={ForgotPassword} />\n      <Route path=\"/reset/:token\" component={CreatePasswordPage} />\n      <Route path=\"/verify/:token\" component={VerifyEmailPage} />\n      <Route path=\"/admin\" component={Dashboard} />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ConfigProvider } from 'antd'\nimport viVN from 'antd/es/locale/vi_VN'\nimport GlobalModal, { ModalProvider } from 'components/GlobalModal'\nimport { persistor, store } from 'core/store'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider locale={viVN}>\n        <PersistGate loading={null} persistor={persistor}>\n          <IconContext.Provider\n            value={{\n              className: 'react-icon-clasname',\n              style: { verticalAlign: 'middle' }\n            }}\n          >\n            <App />\n            <GlobalModal />\n          </IconContext.Provider>\n        </PersistGate>\n      </ConfigProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}