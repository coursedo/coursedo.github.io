{"version":3,"sources":["ultis/functions.js","components/GlobalModal/index.js","ultis/api.js","pages/SignIn/redux/actions.js","pages/SignIn/redux/epics.js","core/epic.js","pages/SignIn/redux/reducer.js","core/reducer.js","core/store.js","components/CInput/index.jsx","assets/images/forgot_password.jpg","assets/logo.png","pages/ForgotPassword/index.jsx","components/Header/index.jsx","pages/Home/index.jsx","assets/images/signin.png","pages/SignIn/index.jsx","assets/images/signup.png","pages/SignUp/index.jsx","pages/CreatePassword/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["history","createHashHistory","forceRefresh","MODAL_TYPE","ROLES","Object","freeze","STUDENT","TEACHER","ADMIN","Text","Typography","GlobalModal","props","closeModal","instance","setState","isShow","handleOk","state","onPress","handleCancel","title","content","type","visible","centered","onOk","onCancel","footer","onClick","size","React","Component","alertMessage","iTitle","iContent","iType","request","param","url","parameters","token","store","getState","Auth","headers","accept","Authorization","from","axios","timeout","method","data","params","catch","error","Promise","resolve","response","pipe","map","result","tap","JSON","stringify","log","SignInRequest","defineAction","SignInRequestSuccess","SignInRequestFailed","SignUpRequest","SignUpRequestSuccess","SignUpRequestFailed","ResetPassword","ResetPasswordSuccess","ResetPasswordFailed","CreatePassword","CreatePasswordSuccess","CreatePasswordFailed","SignOut","authEpics","combineEpics","action$","ofType","exhaustMap","action","payload","status","authenticated","get","message","catchError","dispatch","replace","rootEpic","initialState","refreshToken","user","rootReducer","combineReducers","accessToken","router","connectRouter","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","routerMiddleware","persistConfig","logger","key","storage","persistedReducer","persistReducer","createStore","compose","run","persistor","persistStore","CInput","style","width","marginBottom","className","ForgotPassword","useHistory","useDispatch","useSelector","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","useEffect","validationSchema","yup","shape","email","trim","max","label","required","handleForgot","values","toLowerCase","id","href","textDecoration","color","src","logo","alt","initialValues","isInitialValid","onSubmit","handleChange","handleBlur","handleSubmit","isValid","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","onKeyPress","event","handleKeyPress","alignSelf","padding","push","pathname","disabled","backgroundImage","forgotPic","Header","avatar","icon","UserOutlined","borderRadius","Home","display","justifyContent","alignItems","flex","backgroundColor","SignIn","location","goBack","password","min","matches","handleLogin","signinPic","SignUp","fullName","handleSignup","role","signupPic","CreatePasswordPage","useParams","confirm","oneOf","handleCreate","marginTop","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","locale","viVN","loading","Provider","verticalAlign","document","getElementById"],"mappings":"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","file":"static/js/main.8b7e0bb3.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory({ forceRefresh: true })\r\n\r\nexport const DOMAIN = 'https://coursedo.herokuapp.com/api'\r\nexport const __DEV__ = false\r\n\r\nexport const LIMIT_ITEMS = 12\r\nexport const COLOR = {\r\n  primary1: '#FF8A00',\r\n  primary2: '#FFC000',\r\n  mainBlack: '#5C5C5C',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport const MODAL_TYPE = {\r\n  NORMAL: 'NORMAL',\r\n  CHOICE: 'CHOICE'\r\n}\r\n\r\nexport const ROLES = Object.freeze({ STUDENT: 0, TEACHER: 1, ADMIN: 2 })\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map(i =>\r\n          ['string', 'number'].indexOf(typeof i) === -1\r\n            ? JSON.stringify(i, null, ' ')\r\n            : i\r\n        )\r\n        .join(' ')\r\n    )\r\n  }\r\n}\r\n","import { Modal, Typography, Button } from 'antd'\r\nimport React from 'react'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\n\r\nconst { Text } = Typography\r\n\r\nexport default class GlobalModal extends React.Component {\r\n  static instance = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    GlobalModal.instance = this\r\n    this.state = {\r\n      isShow: false,\r\n      title: '',\r\n      content: '',\r\n      type: MODAL_TYPE.NORMAL,\r\n      onPress: () => {}\r\n    }\r\n  }\r\n\r\n  static alertMessage = (\r\n    iTitle = 'Information',\r\n    iContent = 'An unexpected error has occured. Try again later.',\r\n    iType = MODAL_TYPE.NORMAL,\r\n    onPress = () => {}\r\n  ) => {\r\n    GlobalModal.instance.setState({\r\n      isShow: true,\r\n      title: iTitle,\r\n      content: iContent,\r\n      type: iType,\r\n      onPress\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    GlobalModal.instance.setState({ isShow: false })\r\n  }\r\n\r\n  handleOk = () => {\r\n    GlobalModal.instance.state.onPress()\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  handleCancel = () => {\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title={GlobalModal.instance.state.title}\r\n        visible={GlobalModal.instance.state.isShow}\r\n        centered\r\n        onOk={GlobalModal.instance.handleOk}\r\n        onCancel={GlobalModal.instance.handleCancel}\r\n        footer={\r\n          GlobalModal.instance.state.type === MODAL_TYPE.NORMAL\r\n            ? [\r\n                <Button\r\n                  key=\"okButton\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                  size=\"large\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n            : [\r\n                <Button\r\n                  key=\"cancelButton\"\r\n                  onClick={GlobalModal.instance.handleCancel}\r\n                  size=\"large\"\r\n                >\r\n                  Hủy\r\n                </Button>,\r\n                <Button\r\n                  key=\"okButton\"\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n        }\r\n      >\r\n        <Text>{GlobalModal.instance.state.content}</Text>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { store } from 'core/store'\r\nimport { from } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\nimport { DOMAIN, log as SysLog } from 'ultis/functions'\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi'\r\n  const parameters = param.param\r\n  const token = store.getState().Auth.token\r\n  const headers = token\r\n    ? {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language,\r\n        Authorization: token\r\n      }\r\n    : {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language\r\n      }\r\n\r\n  return from(\r\n    axios\r\n      .request({\r\n        url,\r\n        timeout: 15000,\r\n        headers,\r\n        method: param.method || 'POST',\r\n        data: parameters,\r\n        ...(param.method === 'GET'\r\n          ? { params: parameters, data: {} }\r\n          : { data: parameters })\r\n      })\r\n      .catch(error => {\r\n        return Promise.resolve(error.response)\r\n      })\r\n  ).pipe(\r\n    map(result => {\r\n      return result\r\n    }),\r\n    tap(result => log(url, parameters, result))\r\n  )\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------'\r\n  )\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const SignInRequest = defineAction('SIGNIN_REQUEST')\r\nexport const SignInRequestSuccess = defineAction('SIGNIN_REQUEST_SUCCESS')\r\nexport const SignInRequestFailed = defineAction('SIGNIN_REQUEST_FAILED')\r\n\r\nexport const SignUpRequest = defineAction('SIGNUP_REQUEST')\r\nexport const SignUpRequestSuccess = defineAction('SIGNUP_REQUEST_SUCCESS')\r\nexport const SignUpRequestFailed = defineAction('SIGNUP_REQUEST_FAILED')\r\n\r\nexport const ResetPassword = defineAction('RESET_PASSWORD_REQUEST')\r\nexport const ResetPasswordSuccess = defineAction('RESET_PASSWORD_SUCCESS')\r\nexport const ResetPasswordFailed = defineAction('RESET_PASSWORD_FAILED')\r\n\r\nexport const CreatePassword = defineAction('CREATE_PASSWORD_REQUEST')\r\nexport const CreatePasswordSuccess = defineAction('CREATE_PASSWORD_SUCCESS')\r\nexport const CreatePasswordFailed = defineAction('CREATE_PASSWORD_FAILED')\r\n\r\nexport const SignOut = defineAction('SIGNOUT_REQUEST')\r\n","import GlobalModal from 'components/GlobalModal'\r\nimport { replace } from 'connected-react-router'\r\nimport { store } from 'core/store'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\nimport {\r\n  CreatePassword,\r\n  CreatePasswordFailed,\r\n  CreatePasswordSuccess,\r\n  ResetPassword,\r\n  ResetPasswordFailed,\r\n  ResetPasswordSuccess,\r\n  SignInRequest,\r\n  SignInRequestFailed,\r\n  SignInRequestSuccess,\r\n  SignUpRequest,\r\n  SignUpRequestFailed,\r\n  SignUpRequestSuccess\r\n} from './actions'\r\n\r\nconst signinEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignInRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/login',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200 && result.data?.authenticated) {\r\n            return SignInRequestSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage(\r\n            'Information',\r\n            'Email or password may not correct. Please try again.'\r\n          )\r\n          return SignInRequestFailed.get(result.data.message)\r\n        }),\r\n        catchError(error => {\r\n          return SignInRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst signupEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignUpRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/signup',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 201) {\r\n            store.dispatch(replace('/signin', { from: '/signup' }))\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              'Sign up succeed. Please sign in to continue.'\r\n            )\r\n            return SignUpRequestSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return SignUpRequestFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return SignUpRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst resetPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(ResetPassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/resetPassword',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/'))\r\n            )\r\n            return ResetPasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return ResetPasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return ResetPasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst createPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(CreatePassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/createPassword',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/signin'))\r\n            )\r\n            return CreatePasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return CreatePasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return CreatePasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nexport const authEpics = combineEpics(\r\n  signinEpic$,\r\n  signupEpic$,\r\n  resetPasswordEpic$,\r\n  createPasswordEpic$\r\n)\r\n","import { combineEpics } from 'redux-observable'\r\nimport { authEpics } from 'pages/SignIn/redux/epics'\r\n\r\nexport const rootEpic = combineEpics(authEpics)\r\n","import { SignInRequestSuccess, SignOut } from './actions'\r\nconst initialState = {\r\n  token: null,\r\n  refreshToken: null,\r\n  user: null\r\n}\r\n\r\nexport function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SignInRequestSuccess.type:\r\n      return {\r\n        ...state,\r\n        token: action.payload.accessToken,\r\n        refreshToken: action.payload.refreshToken,\r\n        user: action.payload\r\n      }\r\n    case SignOut.type:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { connectRouter } from 'connected-react-router'\r\nimport { authReducer } from 'pages/SignIn/redux/reducer'\r\nimport { combineReducers } from 'redux'\r\nimport { history } from 'ultis/functions'\r\n\r\nexport const rootReducer = combineReducers({\r\n  Auth: authReducer,\r\n  router: connectRouter(history)\r\n})\r\n","import { routerMiddleware } from 'connected-react-router'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { history, __DEV__ } from 'ultis/functions'\r\nimport { rootEpic } from './epic'\r\nimport { rootReducer } from './reducer'\r\n\r\nconst epicMiddleware = createEpicMiddleware()\r\n\r\nconst applyMiddlewarePro = applyMiddleware(\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\nconst applyMiddlewareDev = applyMiddleware(\r\n  logger,\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  __DEV__ ? compose(applyMiddlewareDev) : compose(applyMiddlewarePro)\r\n)\r\n\r\nepicMiddleware.run(rootEpic)\r\n\r\nexport const persistor = persistStore(store)\r\n","import { Input } from 'antd'\r\nimport 'pages/SignIn/signin.css'\r\nimport React from 'react'\r\n\r\nfunction CInput(props) {\r\n  return (\r\n    <div style={{ width: '100%', marginBottom: 12 }}>\r\n      <Input {...props} />\r\n      {props.error && <span className=\"errorStyle\">{props.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CInput\r\n","export default __webpack_public_path__ + \"static/media/forgot_password.88496ed7.jpg\";","export default __webpack_public_path__ + \"static/media/logo.19a91f5e.png\";","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { ResetPassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleForgot = values => {\r\n    dispatch(\r\n      ResetPassword.get({\r\n        ...values,\r\n        email: values.email.toLowerCase()\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleForgot(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"forgot\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleForgot(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Ok let’s fetch you ya’ login details\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/forgot` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Back to Sign Up\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Proceed\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import { Avatar, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './header.css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Header(props) {\r\n  const user = useSelector(state => state.Auth.user)\r\n  const history = useHistory()\r\n  return (\r\n    <div id=\"headerView\">\r\n      <span id=\"logoText\">coursedo</span>\r\n      {user ? (\r\n        user?.avatar ? (\r\n          <Avatar size={48} src={user?.avatar} />\r\n        ) : (\r\n          <Avatar size={48} icon={<UserOutlined />} />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ borderRadius: 50 }}\r\n          onClick={() =>\r\n            history.push({\r\n              pathname: '/signin',\r\n              state: { from: `/` }\r\n            })\r\n          }\r\n        >\r\n          Sign in\r\n        </Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { Button } from 'antd'\r\nimport GlobalModal from 'components/GlobalModal'\r\nimport Header from 'components/Header'\r\nimport { SignOut } from 'pages/SignIn/redux/actions'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { history, MODAL_TYPE } from 'ultis/functions'\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flex: 1,\r\n          backgroundColor: 'white'\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => {\r\n            GlobalModal.alertMessage('Information', 'Ha ha', MODAL_TYPE.CHOICE)\r\n          }}\r\n        >\r\n          Mở modal\r\n        </Button>\r\n        <Button type=\"primary\" onClick={() => history.push('/signup')}>\r\n          Đăng ký\r\n        </Button>\r\n        <Button onClick={() => history.push('/signin')}>Đăng nhập</Button>\r\n        <Button onClick={() => dispatch(SignOut.get())}>Log out</Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/signin.07d692eb.png\";","import { Button } from 'antd'\r\nimport signinPic from 'assets/images/signin.png'\r\nimport logo from 'assets/logo.png'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport { SignInRequest } from './redux/actions'\r\nimport './signin.css'\r\n\r\nfunction SignIn() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (history.location.state) {\r\n        history.goBack()\r\n      } else {\r\n        history.replace('/')\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleLogin = values => {\r\n    dispatch(\r\n      SignInRequest.get({ ...values, email: values.email.toLowerCase() })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleLogin(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signin\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleLogin(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Sign in to your account to continue\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div className=\"buttomBox\">\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() => history.push('/forgot')}\r\n                    >\r\n                      Forgot password?\r\n                    </Button>\r\n                    <div>\r\n                      <span>Don’t have an account? </span>\r\n                      <Button\r\n                        style={{ padding: 0 }}\r\n                        color=\"primary\"\r\n                        type=\"link\"\r\n                        onClick={() => history.push('/signup')}\r\n                      >\r\n                        Sign up\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signinPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","export default __webpack_public_path__ + \"static/media/signup.46c9af80.png\";","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { SignUpRequest } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport signupPic from 'assets/images/signup.png'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction SignUp() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email'),\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    fullName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Please input password')\r\n      .min(3, 'Full name must include at least 3 characters')\r\n      .max(64, 'Full name must include at most 48 characters')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Invalid full name'\r\n        }\r\n      )\r\n  })\r\n\r\n  const handleSignup = values => {\r\n    dispatch(\r\n      SignUpRequest.get({\r\n        ...values,\r\n        email: values.email.toLowerCase(),\r\n        role: ROLES.STUDENT\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleSignup(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signup\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              fullName: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleSignup(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Please create a new account here</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.fullName}\r\n                    onChange={handleChange('fullName')}\r\n                    onTouchStart={() => setFieldTouched('fullName')}\r\n                    onBlur={handleBlur('fullName')}\r\n                    placeholder=\"Full name\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.fullName}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/signup` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signupPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { CreatePassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction CreatePasswordPage() {\r\n  const param = useParams()\r\n  const { token } = param\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user || !token) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    confirm: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      })\r\n      .oneOf(\r\n        [yup.ref('password'), null],\r\n        'Confirm password must be the same as password'\r\n      )\r\n  })\r\n\r\n  const handleCreate = values => {\r\n    dispatch(\r\n      CreatePassword.get({\r\n        password: values.password,\r\n        token: token\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleCreate(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"logo\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              confirm: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleCreate(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Input new password to continue</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.password}\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"New password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.confirm}\r\n                    onChange={handleChange('confirm')}\r\n                    onTouchStart={() => setFieldTouched('confirm')}\r\n                    onBlur={handleBlur('confirm')}\r\n                    placeholder=\"Confirm password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.confirm}\r\n                    type=\"password\"\r\n                  />\r\n                  <Button\r\n                    style={{ marginTop: 24 }}\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Reset password\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePasswordPage\r\n","import ForgotPassword from 'pages/ForgotPassword'\nimport Home from 'pages/Home'\nimport SignIn from 'pages/SignIn'\nimport SignUp from 'pages/SignUp'\nimport CreatePasswordPage from 'pages/CreatePassword'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { history } from 'ultis/functions'\nimport './App.less'\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route path=\"/forgot\" component={ForgotPassword} />\n      <Route path=\"/reset/:token\" component={CreatePasswordPage} />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ConfigProvider } from 'antd'\nimport viVN from 'antd/es/locale/vi_VN'\nimport GlobalModal, { ModalProvider } from 'components/GlobalModal'\nimport { persistor, store } from 'core/store'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider locale={viVN}>\n        <PersistGate loading={null} persistor={persistor}>\n          <IconContext.Provider\n            value={{\n              className: 'react-icon-clasname',\n              style: { verticalAlign: 'middle' }\n            }}\n          >\n            <App />\n            <GlobalModal />\n          </IconContext.Provider>\n        </PersistGate>\n      </ConfigProvider>\n      >\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}