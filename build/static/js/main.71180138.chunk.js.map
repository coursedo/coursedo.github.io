{"version":3,"sources":["ultis/functions.js","components/GlobalModal/index.js","ultis/api.js","pages/SignIn/redux/actions.js","pages/SignIn/redux/epics.js","core/epic.js","pages/SignIn/redux/reducer.js","core/reducer.js","core/store.js","pages/Home/index.jsx","pages/SignIn/index.jsx","pages/SignUp/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["history","createHashHistory","forceRefresh","COLOR","primary1","primary2","mainBlack","gray","MODAL_TYPE","Text","Typography","GlobalModal","props","closeModal","instance","setState","isShow","handleOk","state","onPress","handleCancel","title","content","type","this","visible","centered","onOk","onCancel","React","Component","alertMessage","iTitle","iContent","iType","request","param","url","parameters","token","store","getState","Auth","headers","accept","Authorization","from","axios","timeout","method","data","params","catch","error","Promise","resolve","response","pipe","map","result","tap","JSON","stringify","log","SignInRequest","defineAction","SignInRequestSuccess","SignInRequestFailed","SignUpRequest","SignUpRequestSuccess","SignUpRequestFailed","ResetPassword","ResetPasswordSuccess","ResetPasswordFailed","CreatePassword","CreatePasswordSuccess","CreatePasswordFailed","SignOut","authEpics","combineEpics","action$","ofType","exhaustMap","action","payload","status","get","err","catchError","dispatch","replace","rootEpic","initialState","user","rootReducer","combineReducers","router","connectRouter","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","routerMiddleware","persistConfig","logger","key","storage","persistedReducer","persistReducer","createStore","compose","run","persistor","persistStore","Home","useState","setVisible","style","display","justifyContent","alignItems","flex","backgroundColor","onClick","push","SignIn","useHistory","useDispatch","useSelector","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","useEffect","location","goBack","validationSchema","yup","shape","password","required","min","max","matches","message","email","label","handleLogin","values","toLowerCase","handleKeyPress","isValid","event","id","href","textDecoration","color","className","initialValues","isInitialValid","onSubmit","handleChange","handleBlur","handleSubmit","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","onKeyPress","disabled","primary","size","SignUp","trim","confirmPassword","oneOf","username","handleSignup","paddingBottom","alignSelf","pathname","deactiveGray","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","locale","viVN","loading","Provider","verticalAlign","document","getElementById"],"mappings":"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","file":"static/js/main.71180138.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory({ forceRefresh: true })\r\n\r\nexport const DOMAIN = 'https://lemon-aid-backend.herokuapp.com/api'\r\nexport const __DEV__ = false\r\n\r\nexport const LIMIT_ITEMS = 12\r\nexport const COLOR = {\r\n  primary1: '#FF8A00',\r\n  primary2: '#FFC000',\r\n  mainBlack: '#5C5C5C',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport const MODAL_TYPE = {\r\n  NORMAL: 'NORMAL',\r\n  CHOICE: 'CHOICE'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map(i =>\r\n          ['string', 'number'].indexOf(typeof i) === -1\r\n            ? JSON.stringify(i, null, ' ')\r\n            : i\r\n        )\r\n        .join(' ')\r\n    )\r\n  }\r\n}\r\n","import { Modal, Typography } from 'antd'\r\nimport React from 'react'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\n\r\nconst { Text } = Typography\r\n\r\nexport default class GlobalModal extends React.Component {\r\n  static instance = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    GlobalModal.instance = this\r\n    this.state = {\r\n      isShow: false,\r\n      title: '',\r\n      content: '',\r\n      type: MODAL_TYPE.NORMAL,\r\n      onPress: () => {}\r\n    }\r\n  }\r\n\r\n  static alertMessage = (\r\n    iTitle = '',\r\n    iContent,\r\n    iType = MODAL_TYPE.NORMAL,\r\n    onPress = () => {}\r\n  ) => {\r\n    GlobalModal.instance.setState({\r\n      isShow: true,\r\n      title: iTitle,\r\n      content: iContent ? iContent : 'Đã có lỗi xảy ra',\r\n      type: iType ? iType : MODAL_TYPE.NORMAL,\r\n      onPress: onPress ? onPress : () => {}\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    GlobalModal.instance.setState({ isShow: false })\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.state.onPress()\r\n    this.closeModal()\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.closeModal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title={this.state.title}\r\n        visible={GlobalModal.instance.state.isShow}\r\n        centered\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n      >\r\n        <Text>{this.state.content}</Text>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { store } from 'core/store'\r\nimport { from } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\nimport { DOMAIN, log as SysLog } from 'ultis/functions'\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi'\r\n  const parameters = param.param\r\n  const token = store.getState().Auth.token\r\n  const headers = token\r\n    ? {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language,\r\n        Authorization: token\r\n      }\r\n    : {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language\r\n      }\r\n\r\n  return from(\r\n    axios\r\n      .request({\r\n        url,\r\n        timeout: 15000,\r\n        headers,\r\n        method: param.method || 'POST',\r\n        data: parameters,\r\n        ...(param.method === 'GET'\r\n          ? { params: parameters, data: {} }\r\n          : { data: parameters })\r\n      })\r\n      .catch(error => {\r\n        return Promise.resolve(error.response)\r\n      })\r\n  ).pipe(\r\n    map(result => {\r\n      return result\r\n    }),\r\n    tap(result => log(url, parameters, result))\r\n  )\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------'\r\n  )\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const SignInRequest = defineAction('SIGNIN_REQUEST')\r\nexport const SignInRequestSuccess = defineAction('SIGNIN_REQUEST_SUCCESS')\r\nexport const SignInRequestFailed = defineAction('SIGNIN_REQUEST_FAILED')\r\n\r\nexport const SignUpRequest = defineAction('SIGNUP_REQUEST')\r\nexport const SignUpRequestSuccess = defineAction('SIGNUP_REQUEST_SUCCESS')\r\nexport const SignUpRequestFailed = defineAction('SIGNUP_REQUEST_FAILED')\r\n\r\nexport const ResetPassword = defineAction('RESET_PASSWORD_REQUEST')\r\nexport const ResetPasswordSuccess = defineAction('RESET_PASSWORD_SUCCESS')\r\nexport const ResetPasswordFailed = defineAction('RESET_PASSWORD_FAILED')\r\n\r\nexport const CreatePassword = defineAction('CREATE_PASSWORD_REQUEST')\r\nexport const CreatePasswordSuccess = defineAction('CREATE_PASSWORD_SUCCESS')\r\nexport const CreatePasswordFailed = defineAction('CREATE_PASSWORD_FAILED')\r\n\r\nexport const SignOut = defineAction('SIGNOUT_REQUEST')\r\n","import { ModalContext } from 'components/GlobalModal'\r\nimport { replace } from 'connected-react-router'\r\nimport { store } from 'core/store'\r\nimport { useContext } from 'react'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\nimport {\r\n  CreatePassword,\r\n  CreatePasswordFailed,\r\n  CreatePasswordSuccess,\r\n  ResetPassword,\r\n  ResetPasswordFailed,\r\n  ResetPasswordSuccess,\r\n  SignInRequest,\r\n  SignInRequestFailed,\r\n  SignInRequestSuccess,\r\n  SignUpRequest,\r\n  SignUpRequestFailed,\r\n  SignUpRequestSuccess\r\n} from './actions'\r\n\r\n// const { handleModal } = useContext(ModalContext)\r\n\r\nconst signinEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignInRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'signin',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            return SignInRequestSuccess.get(result.data)\r\n          }\r\n          // handleModal('Thông báo', result.data?.err)\r\n          return SignInRequestFailed.get(result.data.err)\r\n        }),\r\n        catchError(error => {\r\n          return SignInRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst signinSuccessEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignInRequestSuccess.type),\r\n    map(action => {})\r\n  )\r\n\r\nconst signupEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignUpRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'signup',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            store.dispatch(replace('/signin', { from: '/signup' }))\r\n            // handleModal('Thông báo', result.data.message)\r\n            return SignUpRequestSuccess.get(result.data)\r\n          }\r\n          // handleModal('Thông báo', result.data?.message)\r\n          return SignUpRequestFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return SignUpRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst resetPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(ResetPassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'reset-password',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            // handleModal(\r\n            //   'Thông báo',\r\n            //   'Vui lòng kiểm tra email để thay đổi mật khẩu',\r\n            //   MODAL_TYPE.NORMAL,\r\n            //   () => store.dispatch(replace('/'))\r\n            // )\r\n            return ResetPasswordSuccess.get(result.data)\r\n          }\r\n          // handleModal('Thông báo', null)\r\n          return ResetPasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return ResetPasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst createPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(CreatePassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'create-new-password',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            // handleModal(\r\n            //   'Thông báo',\r\n            //   'Tạo mật khẩu thành công. Vui lòng đăng nhập',\r\n            //   MODAL_TYPE.NORMAL,\r\n            //   () => store.dispatch(replace('/signin'))\r\n            // )\r\n            return CreatePasswordSuccess.get(result.data)\r\n          }\r\n          return CreatePasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return CreatePasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nexport const authEpics = combineEpics(\r\n  signinEpic$,\r\n  signupEpic$,\r\n  resetPasswordEpic$,\r\n  signinSuccessEpic$,\r\n  createPasswordEpic$\r\n)\r\n","import { combineEpics } from 'redux-observable'\r\nimport { authEpics } from 'pages/SignIn/redux/epics'\r\n\r\nexport const rootEpic = combineEpics(authEpics)\r\n","import { SignInRequestSuccess, SignOut } from './actions'\r\nconst initialState = {\r\n  token: null,\r\n  user: null\r\n}\r\n\r\nexport function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SignInRequestSuccess.type:\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        user: action.payload.user\r\n      }\r\n    case SignOut.type:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { connectRouter } from 'connected-react-router'\r\nimport { authReducer } from 'pages/SignIn/redux/reducer'\r\nimport { combineReducers } from 'redux'\r\nimport { history } from 'ultis/functions'\r\n\r\nexport const rootReducer = combineReducers({\r\n  Auth: authReducer,\r\n  router: connectRouter(history)\r\n})\r\n","import { routerMiddleware } from 'connected-react-router'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { history, __DEV__ } from 'ultis/functions'\r\nimport { rootEpic } from './epic'\r\nimport { rootReducer } from './reducer'\r\n\r\nconst epicMiddleware = createEpicMiddleware()\r\n\r\nconst applyMiddlewarePro = applyMiddleware(\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\nconst applyMiddlewareDev = applyMiddleware(\r\n  logger,\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  __DEV__ ? compose(applyMiddlewareDev) : compose(applyMiddlewarePro)\r\n)\r\n\r\nepicMiddleware.run(rootEpic)\r\n\r\nexport const persistor = persistStore(store)\r\n","import { Button, Modal, Typography } from 'antd'\r\nimport GlobalModal from 'components/GlobalModal'\r\nimport React, { useState } from 'react'\r\nimport { history } from 'ultis/functions'\r\n\r\nconst { Text } = Typography\r\n\r\nfunction Home() {\r\n  const [visible, setVisible] = useState(false)\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        backgroundColor: 'white'\r\n      }}\r\n    >\r\n      <Button\r\n        onClick={() => {\r\n          GlobalModal.alertMessage('Thông báo', 'Ha ha')\r\n          // setVisible(true)\r\n        }}\r\n      >\r\n        Mở modal\r\n      </Button>\r\n      <Button type=\"primary\" onClick={() => history.push('signin')}>\r\n        Đăng ký\r\n      </Button>\r\n      <Button onClick={() => history.push('signup')}>Đăng nhập</Button>\r\n      <Text>hú hú</Text>\r\n      <Modal\r\n        title=\"hello\"\r\n        visible={visible}\r\n        centered\r\n        onOk={() => setVisible(false)}\r\n        onCancel={() => setVisible(false)}\r\n      >\r\n        <Text>{'hu hu'}</Text>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { Button, Input } from 'antd'\r\nimport { Form, Formik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { COLOR } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport { SignInRequest } from './redux/actions'\r\nimport './signin.css'\r\n\r\nfunction SignIn() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (history.location.state) {\r\n        history.goBack()\r\n      } else {\r\n        history.replace('/')\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Vui lòng nhập mật khẩu')\r\n      .min(8, 'Mật khẩu gồm 8 kí tự trở lên')\r\n      .max(48, 'Mật khẩu không vượt quá 48 kí tự')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Mật khẩu phải gồm 8 kí tự'\r\n      }),\r\n    email: yup\r\n      .string()\r\n      .label('Email')\r\n      .email('Email hiện tại không hợp lệ')\r\n      .required('* Vui lòng nhập email')\r\n  })\r\n\r\n  const handleLogin = values => {\r\n    dispatch(\r\n      SignInRequest.get({ ...values, email: values.email.toLowerCase() })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleLogin(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <span className=\"dimoName\">coursedo</span>\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <span id=\"loginStyle\">Đăng nhập</span>\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleLogin(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <Input\r\n                    id=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                  />\r\n                  {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                  <Input\r\n                    id=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Mật khẩu\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                  />\r\n                  {errors.password && (\r\n                    <span id=\"errorStyle\">{errors.password}</span>\r\n                  )}\r\n                  <div className=\"buttomBox\">\r\n                    <Button onClick={() => history.push('/forgot')}>\r\n                      Quên mật khẩu\r\n                    </Button>\r\n                    <div>\r\n                      <span>Chưa có tài khoản?</span>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={() => history.push('/signup')}\r\n                      >\r\n                        Đăng ký\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    style={{\r\n                      backgroundColor: isValid ? COLOR.primary : COLOR.gray\r\n                    }}\r\n                    onClick={handleSubmit}\r\n                    size={'large'}\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\">\r\n          <span className=\"tagline\">Vào bếp không khó</span>\r\n          <span className=\"tagline\">Có Lemon-aid lo</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import { Form, Formik } from 'formik'\r\nimport { SignUpRequest } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { COLOR } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport { Button, Input } from 'antd'\r\n\r\nfunction SignUp() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email không được quá 48 kí tự')\r\n      .label('Email')\r\n      .email('Email không hợp lệ')\r\n      .required('* Vui lòng nhập email'),\r\n    password: yup\r\n      .string()\r\n      .required('* Vui lòng nhập mật khẩu')\r\n      .min(8, 'Mật khẩu gồm 8 kí tự trở lên')\r\n      .max(48, 'Mật khẩu không vượt quá 48 kí tự')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Mật khẩu phải gồm 8 kí tự'\r\n      }),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required('* Vui lòng nhập lại mật khẩu')\r\n      .oneOf(\r\n        [yup.ref('password'), null],\r\n        'Mật khẩu nhập lại phải khớp với mật khẩu đã nhập'\r\n      ),\r\n    username: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập tên đăng nhập')\r\n      .min(3, 'Tên đăng nhập từ 3 kí tự trở lên')\r\n      .max(16, 'Tên đăng nhập không được quá 16 kí tự')\r\n      .matches(\r\n        /(?=[a-zA-Z0-9._]{3,16}$)(?!.*[_.]{2})[^_.].*[^_.]$/,\r\n        'Tên đăng nhập không hợp lệ'\r\n      )\r\n  })\r\n\r\n  const handleSignup = values => {\r\n    dispatch(\r\n      SignUpRequest.get({\r\n        ...values,\r\n        username: values.username.toLowerCase(),\r\n        email: values.email.toLowerCase()\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleSignup(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\" style={{ paddingBottom: 20 }}>\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <span className=\"dimoName\">Lemon-aid</span>\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <span id=\"loginStyle\">Đăng ký</span>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              confirmPassword: '',\r\n              username: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleSignup(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                // của material ui chưa đổi, tự đổi hén\r\n                <Form className=\"formStyle\">\r\n                  {/* <CTextField\r\n                    helperText={errors.username && errors.username}\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Tên đăng nhập\"\r\n                    variant=\"outlined\"\r\n                    value={values.username}\r\n                    onChange={handleChange('username')}\r\n                    onTouchStart={() => setFieldTouched('username')}\r\n                    onBlur={handleBlur('username')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                    autoFocus\r\n                  />\r\n                  <CTextField\r\n                    helperText={errors.email && errors.email}\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                  />\r\n                  <CTextField\r\n                    helperText={errors.password && errors.password}\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                    type=\"password\"\r\n                  />\r\n                  <CTextField\r\n                    helperText={\r\n                      errors.confirmPassword && errors.confirmPassword\r\n                    }\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Nhập lại mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('confirmPassword')}\r\n                    onTouchStart={() => setFieldTouched('confirmPassword')}\r\n                    value={values.confirmPassword}\r\n                    onBlur={handleBlur('confirmPassword')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                    type=\"password\"\r\n                  /> */}\r\n                  <div style={{ alignSelf: 'flex-end' }}>\r\n                    <span>Đã có tài khoản?</span>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/signup` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Đăng nhập\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    style={{\r\n                      backgroundColor: isValid\r\n                        ? COLOR.primary\r\n                        : COLOR.deactiveGray\r\n                    }}\r\n                    onClick={handleSubmit}\r\n                    size={'large'}\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\">\r\n          {/* <img src={require('../../assets/signin_img.svg')} alt=\"img\" /> */}\r\n          <span className=\"tagline\">Vào bếp không khó</span>\r\n          <span className=\"tagline\">Có Lemon-aid lo</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import Home from 'pages/Home'\nimport SignIn from 'pages/SignIn'\nimport SignUp from 'pages/SignUp'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { history } from 'ultis/functions'\nimport './App.less'\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ConfigProvider } from 'antd'\nimport viVN from 'antd/es/locale/vi_VN'\nimport GlobalModal, { ModalProvider } from 'components/GlobalModal'\nimport { persistor, store } from 'core/store'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider locale={viVN}>\n        <PersistGate loading={null} persistor={persistor}>\n          <IconContext.Provider\n            value={{\n              className: 'react-icon-clasname',\n              style: { verticalAlign: 'middle' }\n            }}\n          >\n            <App />\n            <GlobalModal />\n          </IconContext.Provider>\n        </PersistGate>\n      </ConfigProvider>\n      >\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}