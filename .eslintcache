[{"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\index.js":"1","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\reportWebVitals.js":"2","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\App.js":"3","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\store.js":"4","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\GlobalModal\\index.js":"5","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\epic.js":"6","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\reducer.js":"7","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\functions.js":"8","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\index.jsx":"9","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignUp\\index.jsx":"10","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\index.jsx":"11","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\index.jsx":"12","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\VerifyEmail\\index.jsx":"13","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreatePassword\\index.jsx":"14","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\ForgotPassword\\index.jsx":"15","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\index.jsx":"16","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Courses\\index.jsx":"17","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\redux\\epics.js":"18","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\redux\\actions.js":"19","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\constant.js":"20","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\constant.js":"21","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\components\\swipeComponent.jsx":"22","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\firebaseConfig.js":"23","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\components\\discoverBtn.jsx":"24","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\redux\\actions.js":"25","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\actions.js":"26","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\api.js":"27","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\addTeacher.jsx":"28","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\CourseCard\\index.jsx":"29","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\Header\\index.jsx":"30","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\Footer\\index.jsx":"31","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\CInput\\index.jsx":"32","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\Categories\\index.jsx":"33","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\constant.js":"34","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\teacherList.jsx":"35","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\studentList.jsx":"36","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\categoryList.jsx":"37","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\coursesList.jsx":"38","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\searchInput.js":"39","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\coursesTab.jsx":"40","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\CateCard\\index.jsx":"41","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\profileTab.jsx":"42","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\addCategory.jsx":"43","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\reducer.js":"44","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\redux\\reducer.js":"45","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\redux\\reducer.js":"46","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\redux\\epics.js":"47","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\epics.js":"48","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\redux\\epics.js":"49","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\redux\\actions.js":"50","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\redux\\reducer.js":"51","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Profile\\index.jsx":"52","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Profile\\components\\changePassTab.jsx":"53","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Profile\\components\\profileTab.jsx":"54"},{"size":1229,"mtime":1610310269240,"results":"55","hashOfConfig":"56"},{"size":375,"mtime":1607629974841,"results":"57","hashOfConfig":"56"},{"size":1307,"mtime":1610358402138,"results":"58","hashOfConfig":"56"},{"size":1047,"mtime":1598279743963,"results":"59","hashOfConfig":"56"},{"size":2342,"mtime":1609780499882,"results":"60","hashOfConfig":"56"},{"size":385,"mtime":1610311126264,"results":"61","hashOfConfig":"56"},{"size":574,"mtime":1610311139981,"results":"62","hashOfConfig":"56"},{"size":898,"mtime":1610361305910,"results":"63","hashOfConfig":"56"},{"size":4253,"mtime":1610361342104,"results":"64","hashOfConfig":"56"},{"size":6074,"mtime":1610009495492,"results":"65","hashOfConfig":"56"},{"size":5201,"mtime":1610180666079,"results":"66","hashOfConfig":"56"},{"size":16667,"mtime":1610264672662,"results":"67","hashOfConfig":"56"},{"size":648,"mtime":1610015872625,"results":"68","hashOfConfig":"56"},{"size":4565,"mtime":1609991545792,"results":"69","hashOfConfig":"56"},{"size":3965,"mtime":1609991217720,"results":"70","hashOfConfig":"56"},{"size":2730,"mtime":1610358402168,"results":"71","hashOfConfig":"56"},{"size":5969,"mtime":1610311403774,"results":"72","hashOfConfig":"56"},{"size":1218,"mtime":1610264350311,"results":"73","hashOfConfig":"56"},{"size":249,"mtime":1610262978806,"results":"74","hashOfConfig":"56"},{"size":970,"mtime":1610255242608,"results":"75","hashOfConfig":"56"},{"size":1502,"mtime":1610310269248,"results":"76","hashOfConfig":"56"},{"size":2103,"mtime":1610310269246,"results":"77","hashOfConfig":"56"},{"size":523,"mtime":1610195803589,"results":"78","hashOfConfig":"56"},{"size":589,"mtime":1610310269245,"results":"79","hashOfConfig":"56"},{"size":1871,"mtime":1610358623361,"results":"80","hashOfConfig":"56"},{"size":1185,"mtime":1610015032969,"results":"81","hashOfConfig":"56"},{"size":1806,"mtime":1598279584112,"results":"82","hashOfConfig":"56"},{"size":8174,"mtime":1610201151180,"results":"83","hashOfConfig":"56"},{"size":1662,"mtime":1610310269219,"results":"84","hashOfConfig":"56"},{"size":5506,"mtime":1610358402167,"results":"85","hashOfConfig":"56"},{"size":463,"mtime":1610310269222,"results":"86","hashOfConfig":"56"},{"size":333,"mtime":1609781395260,"results":"87","hashOfConfig":"56"},{"size":1323,"mtime":1610310269216,"results":"88","hashOfConfig":"56"},{"size":277,"mtime":1610205404114,"results":"89","hashOfConfig":"56"},{"size":4736,"mtime":1610229031201,"results":"90","hashOfConfig":"56"},{"size":5031,"mtime":1610228051270,"results":"91","hashOfConfig":"56"},{"size":4302,"mtime":1610187203968,"results":"92","hashOfConfig":"56"},{"size":4180,"mtime":1610359518878,"results":"93","hashOfConfig":"56"},{"size":2787,"mtime":1610186628475,"results":"94","hashOfConfig":"56"},{"size":3124,"mtime":1610227833237,"results":"95","hashOfConfig":"56"},{"size":704,"mtime":1610310269161,"results":"96","hashOfConfig":"56"},{"size":1340,"mtime":1610228427160,"results":"97","hashOfConfig":"56"},{"size":4116,"mtime":1610190828162,"results":"98","hashOfConfig":"56"},{"size":528,"mtime":1609692535516,"results":"99","hashOfConfig":"56"},{"size":2039,"mtime":1610314090385,"results":"100","hashOfConfig":"56"},{"size":285,"mtime":1610262890671,"results":"101","hashOfConfig":"56"},{"size":6075,"mtime":1610359882485,"results":"102","hashOfConfig":"56"},{"size":5111,"mtime":1610201457242,"results":"103","hashOfConfig":"56"},{"size":1682,"mtime":1610311114617,"results":"104","hashOfConfig":"56"},{"size":491,"mtime":1610310629667,"results":"105","hashOfConfig":"56"},{"size":1271,"mtime":1610310942236,"results":"106","hashOfConfig":"56"},{"size":1166,"mtime":1610358402185,"results":"107","hashOfConfig":"56"},{"size":1338,"mtime":1610358402184,"results":"108","hashOfConfig":"56"},{"size":1397,"mtime":1610358402184,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1unttm2",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\index.js",[],["230","231"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\reportWebVitals.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\App.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\store.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\GlobalModal\\index.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\epic.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\functions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\index.jsx",["232","233"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignUp\\index.jsx",["234","235"],"import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { SignUpRequest } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport signupPic from 'assets/images/signup.png'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction SignUp() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email'),\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    fullName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Please input password')\r\n      .min(3, 'Full name must include at least 3 characters')\r\n      .max(64, 'Full name must include at most 48 characters')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Invalid full name'\r\n        }\r\n      )\r\n  })\r\n\r\n  const handleSignup = values => {\r\n    dispatch(\r\n      SignUpRequest.get({\r\n        ...values,\r\n        email: values.email.toLowerCase(),\r\n        role: ROLES.NOT_VERIFIED\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleSignup(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signup\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              fullName: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleSignup(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Please create a new account here</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.fullName}\r\n                    onChange={handleChange('fullName')}\r\n                    onTouchStart={() => setFieldTouched('fullName')}\r\n                    onBlur={handleBlur('fullName')}\r\n                    placeholder=\"Full name\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.fullName}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/signup` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signupPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\index.jsx",["236","237"],"import { Button } from 'antd'\r\nimport signinPic from 'assets/images/signin.png'\r\nimport logo from 'assets/logo.png'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport { SignInRequest } from './redux/actions'\r\nimport './signin.css'\r\n\r\nfunction SignIn() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user.role === ROLES.ADMIN) {\r\n        history.replace('/admin')\r\n      } else {\r\n        if (history.location.state) {\r\n          history.goBack()\r\n        } else {\r\n          history.replace('/')\r\n        }\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleLogin = values => {\r\n    dispatch(\r\n      SignInRequest.get({ ...values, email: values.email.toLowerCase() })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleLogin(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signin\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleLogin(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Sign in to your account to continue\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div className=\"buttomBox\">\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() => history.push('/forgot')}\r\n                    >\r\n                      Forgot password?\r\n                    </Button>\r\n                    <div>\r\n                      <span>Don’t have an account? </span>\r\n                      <Button\r\n                        style={{ padding: 0 }}\r\n                        color=\"primary\"\r\n                        type=\"link\"\r\n                        onClick={() => history.push('/signup')}\r\n                      >\r\n                        Sign up\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signinPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\index.jsx",["238","239"],"import {\r\n  Button,\r\n  Select,\r\n  Space,\r\n  Switch,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Upload\r\n} from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport Header from 'components/Header'\r\nimport { Formik } from 'formik'\r\nimport { GetAllCategories } from 'pages/Dashboard/redux/actions'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { COLOR, ROLES } from 'ultis/functions'\r\nimport { validationCourseSchema } from './constant'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport './createCourse.css'\r\nimport { beforeUpload } from 'pages/Dashboard/component/addTeacher'\r\nimport { dummyRequest } from 'pages/Dashboard/component/addTeacher'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { getBase64 } from 'pages/Dashboard/component/addTeacher'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport { convertToRaw } from 'draft-js'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport CoursedoFirebase from 'ultis/firebaseConfig'\r\nimport { AddCourse } from './redux/actions'\r\n\r\nconst { Title, Text } = Typography\r\nconst { Option } = Select\r\n\r\nexport default function CreateCourse(props) {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth.user)\r\n  const history = useHistory()\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const [isLoadingImage, setLoadingImage] = useState(false)\r\n  const [imgName, setImgName] = useState(null)\r\n  let realList = []\r\n  categoryList.forEach(item => {\r\n    realList.push({\r\n      name: item.name,\r\n      id: item.id\r\n    })\r\n    item?.subCategory &&\r\n      item?.subCategory.length > 0 &&\r\n      item?.subCategory.forEach(subCat => {\r\n        realList.push({\r\n          name: subCat.name,\r\n          id: subCat.id\r\n        })\r\n      })\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (user && user.role !== ROLES.TEACHER) {\r\n      history.replace('/')\r\n    } else {\r\n      dispatch(GetAllCategories.get())\r\n    }\r\n  }, [])\r\n\r\n  const submitCourse = (values, imgURL) => {\r\n    values.chapters.forEach((item, index) => {\r\n      item.numberId = index + 1\r\n    })\r\n    dispatch(\r\n      AddCourse.get({\r\n        ...values,\r\n        numberOfChapter: values.chapters.length,\r\n        thumbnail: imgURL\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleUploadImg = values => {\r\n    CoursedoFirebase.storage()\r\n      .ref('Courses')\r\n      .child(imgName)\r\n      .getDownloadURL()\r\n      .then(dwnURL => {\r\n        submitCourse(values, dwnURL)\r\n      })\r\n      .catch(async error => {\r\n        try {\r\n          const snapshot = await CoursedoFirebase.storage()\r\n            .ref('Courses')\r\n            .child(imgName)\r\n            .putString(values.thumbnail, 'data_url')\r\n          const downloadUrl = await snapshot.ref.getDownloadURL()\r\n          submitCourse(values, downloadUrl)\r\n        } catch (errorUpload) {}\r\n      })\r\n  }\r\n\r\n  const handleUploadThumb = (info, handleChange) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoadingImage(true)\r\n      return\r\n    }\r\n    if (info.file.status === 'done') {\r\n      setImgName(info.file.name)\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        handleChange('thumbnail')(imageUrl)\r\n        setLoadingImage(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDescription = (state, setFieldValue = value => {}) => {\r\n    const rawContentState = convertToRaw(state.getCurrentContent())\r\n    const markup = draftToHtml(rawContentState)\r\n    setFieldValue('description', markup)\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <>\r\n        <Header from=\"addCourse\" />\r\n        <Space size=\"large\" align=\"center\" direction=\"vertical\">\r\n          <Typography variant=\"body1\" style={{ margin: 28 }}>\r\n            You are not signed in. Please sign in to create course\r\n          </Typography>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: '/signin',\r\n                state: { from: `/create` }\r\n              })\r\n            }\r\n          >\r\n            Sign in\r\n          </Button>\r\n        </Space>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {isLoadingImage ? (\r\n        <LoadingOutlined style={{ color: COLOR.primary1 }} />\r\n      ) : (\r\n        <PlusOutlined />\r\n      )}\r\n      <div\r\n        className=\"ant-upload-text\"\r\n        style={{ fontFamily: 'Source Sans Pro' }}\r\n      >\r\n        {isLoadingImage ? 'Uploading' : 'Upload'}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Header from=\"addCourse\" />\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          shortDescription: null,\r\n          description: '',\r\n          thumbnail: null,\r\n          price: 0,\r\n          chapters: [{ numberId: 1, name: '', description: null, video: null }],\r\n          categoryId: null,\r\n          completeStatus: false,\r\n          publicStatus: true\r\n        }}\r\n        isInitialValid={false}\r\n        validationSchema={validationCourseSchema}\r\n        onSubmit={values => submitCourse(values, values.thumbnail)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n          setFieldValue\r\n        }) => {\r\n          return (\r\n            <div\r\n              className={'createBg'}\r\n              style={{\r\n                marginLeft: isDesktopOrLaptop ? 64 : 0,\r\n                marginRight: isDesktopOrLaptop ? 64 : 0\r\n              }}\r\n            >\r\n              <Title\r\n                level={4}\r\n                style={{ textAlign: 'center', marginBottom: 48 }}\r\n              >\r\n                Create new course\r\n              </Title>\r\n              <Upload\r\n                name=\"avatar\"\r\n                listType=\"picture-card\"\r\n                className=\"avatar-uploader\"\r\n                showUploadList={false}\r\n                customRequest={dummyRequest}\r\n                beforeUpload={beforeUpload}\r\n                onChange={info => handleUploadThumb(info, handleChange)}\r\n              >\r\n                {values.thumbnail ? (\r\n                  <img\r\n                    src={values.thumbnail}\r\n                    alt=\"avatar\"\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                ) : (\r\n                  uploadButton\r\n                )}\r\n              </Upload>\r\n              <CInput\r\n                className=\"inputBox\"\r\n                value={values.thumbnail}\r\n                onChange={handleChange('thumbnail')}\r\n                onTouchStart={() => setFieldTouched('thumbnail')}\r\n                onBlur={handleBlur('thumbnail')}\r\n                placeholder=\"Để link hình ở đây nha\"\r\n              />\r\n              <Typography style={{ color: 'red' }}>\r\n                {errors.thumbnail}\r\n              </Typography>\r\n              <div style={{ marginTop: 12 }}>\r\n                <Text strong>Name</Text>\r\n                <CInput\r\n                  className=\"inputBox\"\r\n                  value={values.name}\r\n                  onChange={handleChange('name')}\r\n                  onTouchStart={() => setFieldTouched('name')}\r\n                  onBlur={handleBlur('name')}\r\n                  placeholder=\"Python Development\"\r\n                  error={errors.name}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Text strong>Short description</Text>\r\n                <CInput\r\n                  className=\"inputBox\"\r\n                  value={values.shortDescription}\r\n                  onChange={handleChange('shortDescription')}\r\n                  onTouchStart={() => setFieldTouched('shortDescription')}\r\n                  onBlur={handleBlur('shortDescription')}\r\n                  placeholder=\"This is a Python course\"\r\n                  error={errors.shortDescription}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Text strong>Description</Text>\r\n                <Editor\r\n                  wrapperClassName=\"wrapperClassName\"\r\n                  editorClassName=\"editorClassName\"\r\n                  onBlur={(event, state) =>\r\n                    handleDescription(state, setFieldValue)\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div style={{ marginBottom: 12, marginTop: 16 }}>\r\n                <Text strong>Category</Text>\r\n                <Select\r\n                  style={{ width: '100%' }}\r\n                  value={values.categoryId}\r\n                  onChange={value => setFieldValue('categoryId', value)}\r\n                >\r\n                  <Option value={null}>Choose one category</Option>\r\n                  {realList.map(item => (\r\n                    <Option key={`cate${item.id}`} value={item.id}>\r\n                      {item.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n                <Typography style={{ color: 'red' }}>\r\n                  {errors.categoryId}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Row align=\"middle\" justify=\"space-between\" wrap gutter={32}>\r\n                <Col span={10} sm={24} lg={10} className=\"rowCol\">\r\n                  <Text strong style={{ marginBottom: 12, marginRight: 8 }}>\r\n                    Price\r\n                  </Text>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.price}\r\n                    onChange={handleChange('price')}\r\n                    onTouchStart={() => setFieldTouched('price')}\r\n                    onBlur={handleBlur('price')}\r\n                    placeholder=\"1.99\"\r\n                    error={errors.price}\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n\r\n                <Col span={8} sm={12} lg={8} className=\"rowCol\">\r\n                  <Text strong>Mark as complete</Text>\r\n                  <Switch\r\n                    defaultChecked={values.completeStatus}\r\n                    onChange={checked =>\r\n                      setFieldValue('completeStatus', checked)\r\n                    }\r\n                  />\r\n                </Col>\r\n\r\n                <Col span={6} sm={12} lg={6} className=\"rowCol\">\r\n                  <Text strong>Public</Text>\r\n                  <Switch\r\n                    defaultChecked={values.publicStatus}\r\n                    onChange={checked => setFieldValue('publicStatus', checked)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <div style={{ marginTop: 48 }}>\r\n                <Title style={{ marginBottom: 16 }} level={5}>\r\n                  Chapters\r\n                </Title>\r\n                <Row\r\n                  align=\"top\"\r\n                  justify=\"start\"\r\n                  wrap\r\n                  gutter={[\r\n                    { xs: 8, sm: 16, md: 24 },\r\n                    { xs: 8, sm: 16, md: 24 }\r\n                  ]}\r\n                >\r\n                  {values.chapters.length > 0 &&\r\n                    values.chapters.map((step, i) => (\r\n                      <Col\r\n                        span={8}\r\n                        key={`step${step.numberId}`}\r\n                        xs={24}\r\n                        md={12}\r\n                        lg={8}\r\n                      >\r\n                        <div className=\"rowCol\" style={{ marginBottom: 8 }}>\r\n                          <Text strong>Chapter {i + 1}</Text>\r\n                          <Button\r\n                            size=\"middle\"\r\n                            style={{ backgroundColor: 'red', color: 'white' }}\r\n                            onClick={() => {\r\n                              let chapters = values.chapters\r\n                              chapters.splice(i, 1)\r\n                              setFieldValue('chapters', chapters)\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </div>\r\n\r\n                        <CInput\r\n                          className=\"inputBox\"\r\n                          value={step.name}\r\n                          onChange={event => {\r\n                            let chapters = values.chapters\r\n                            chapters[i].name = event.target.value\r\n                            setFieldValue('chapters', chapters)\r\n                          }}\r\n                          onTouchStart={() => setFieldTouched('chapters')}\r\n                          onBlur={handleBlur('chapters')}\r\n                          placeholder=\"Chapter name\"\r\n                          error={\r\n                            errors.chapters &&\r\n                            typeof errors.chapters === 'object' &&\r\n                            errors.chapters[i]?.name &&\r\n                            errors.chapters[i].name\r\n                          }\r\n                        />\r\n                        <CInput\r\n                          className=\"inputBox\"\r\n                          value={step.description}\r\n                          onChange={event => {\r\n                            let chapters = values.chapters\r\n                            chapters[i].description = event.target.value\r\n                            setFieldValue('chapters', chapters)\r\n                          }}\r\n                          onTouchStart={() => setFieldTouched('chapters')}\r\n                          onBlur={handleBlur('chapters')}\r\n                          placeholder=\"Description\"\r\n                          error={\r\n                            errors.chapters &&\r\n                            typeof errors.chapters === 'object' &&\r\n                            errors.chapters[i]?.description &&\r\n                            errors.chapters[i].description\r\n                          }\r\n                        />\r\n                        <CInput\r\n                          className=\"inputBox\"\r\n                          value={step.video}\r\n                          onChange={event => {\r\n                            let chapters = values.chapters\r\n                            chapters[i].video = event.target.value\r\n                            setFieldValue('chapters', chapters)\r\n                          }}\r\n                          onTouchStart={() => setFieldTouched('chapters')}\r\n                          onBlur={handleBlur('chapters')}\r\n                          placeholder=\"Chapter video link\"\r\n                          error={\r\n                            errors.chapters &&\r\n                            typeof errors.chapters === 'object' &&\r\n                            errors.chapters[i]?.video &&\r\n                            errors.chapters[i].video\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    ))}\r\n                </Row>\r\n\r\n                {errors.chapters && typeof errors.chapters === 'string' && (\r\n                  <Typography style={{ color: 'red' }}>\r\n                    {errors.chapters}\r\n                  </Typography>\r\n                )}\r\n                <Button\r\n                  size=\"middle\"\r\n                  type=\"primary\"\r\n                  style={{ marginTop: 16 }}\r\n                  onClick={() => {\r\n                    let chapters = values.chapters\r\n                    chapters.push({\r\n                      numberId: values.chapters.length + 1,\r\n                      name: '',\r\n                      description: null,\r\n                      video: null\r\n                    })\r\n                    setFieldValue('chapters', chapters)\r\n                  }}\r\n                >\r\n                  Add chapter\r\n                </Button>\r\n              </div>\r\n\r\n              <div style={{ textAlign: 'center', marginTop: 64 }}>\r\n                <Button\r\n                  size=\"large\"\r\n                  style={{\r\n                    marginRight: 24,\r\n                    backgroundColor: 'red',\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  disabled={!isValid}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Create\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\VerifyEmail\\index.jsx",["240"],"import { Space, Spin } from 'antd'\r\nimport { VerifyEmail } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../SignIn/signin.css'\r\n\r\nfunction VerifyEmailPage() {\r\n  const param = useParams()\r\n  const { token } = param\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(VerifyEmail.get({ token }))\r\n  }, [])\r\n\r\n  return (\r\n    <Space\r\n      style={{ display: 'flex', justifyContent: 'center', paddingTop: 48 }}\r\n    >\r\n      <Spin size=\"large\" />\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default VerifyEmailPage\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreatePassword\\index.jsx",["241"],"import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { CreatePassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction CreatePasswordPage() {\r\n  const param = useParams()\r\n  const { token } = param\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user || !token) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    confirm: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      })\r\n      .oneOf(\r\n        [yup.ref('password'), null],\r\n        'Confirm password must be the same as password'\r\n      )\r\n  })\r\n\r\n  const handleCreate = values => {\r\n    dispatch(\r\n      CreatePassword.get({\r\n        password: values.password,\r\n        token: token\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleCreate(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"logo\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              confirm: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleCreate(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Input new password to continue</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.password}\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"New password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.confirm}\r\n                    onChange={handleChange('confirm')}\r\n                    onTouchStart={() => setFieldTouched('confirm')}\r\n                    onBlur={handleBlur('confirm')}\r\n                    placeholder=\"Confirm password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.confirm}\r\n                    type=\"password\"\r\n                  />\r\n                  <Button\r\n                    style={{ marginTop: 24 }}\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Reset password\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePasswordPage\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\ForgotPassword\\index.jsx",["242"],"import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { ResetPassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleForgot = values => {\r\n    dispatch(\r\n      ResetPassword.get({\r\n        ...values,\r\n        email: values.email.toLowerCase()\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleForgot(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"forgot\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleForgot(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Ok let’s fetch you ya’ login details\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/forgot` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Back to Sign Up\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Proceed\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\index.jsx",["243"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Courses\\index.jsx",["244"],"import { Button, Pagination, Menu, Col, Row, Select } from 'antd'\r\nimport bgPic from 'assets/images/bg.png'\r\nimport Footer from 'components/Footer'\r\nimport Header from 'components/Header'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { history } from 'ultis/functions'\r\nimport 'pages/Home/home.css'\r\nimport { courses } from 'pages/Home/constant'\r\nimport CourseCard from 'components/CourseCard'\r\nimport { useSelector } from 'react-redux'\r\nconst { Option } = Select\r\nconst { SubMenu } = Menu\r\n\r\nfunction Courses() {\r\n  const dispatch = useDispatch()\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n  const [current, setCurrentPage] = useState(0)\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const user = useSelector(state => state.Auth.user)\r\n\r\n  const background = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flex: 1,\r\n          backgroundColor: 'white'\r\n        }}\r\n      >\r\n        {isDesktopOrLaptop && (\r\n          <div id=\"landing\" style={{ backgroundImage: `url(${bgPic})` }}>\r\n            <span id=\"welcomeTxt\">\r\n              Browse Thousands of Our Video Tutorials Curated Only for you.\r\n            </span>\r\n            {user ? (\r\n              <div />\r\n            ) : (\r\n              <Button\r\n                style={{\r\n                  marginTop: '1vw',\r\n                  backgroundColor: 'white',\r\n                  color: '#FFC000'\r\n                }}\r\n                type=\"primary\"\r\n                onClick={() => history.push('/signup')}\r\n              >\r\n                Join for Free\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderCourses = () => {\r\n    return (\r\n      <Row gutter={16}>\r\n        {courses.length > 0 ? (\r\n          courses.map(item => {\r\n            return (\r\n              <Col\r\n                span={8}\r\n                xs={24}\r\n                sm={12}\r\n                md={8}\r\n                style={{ marginBlock: '3vh' }}\r\n              >\r\n                <CourseCard\r\n                  img={item.img}\r\n                  title={item.title}\r\n                  teacher={item.teacher}\r\n                  cate={item.category}\r\n                  price={item.price}\r\n                  rating={item.rating}\r\n                  total={item.total}\r\n                />\r\n              </Col>\r\n            )\r\n          })\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  const handleChange = value => {\r\n    console.log(`selected ${value}`)\r\n  }\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flex: 1,\r\n          marginTop: '5vh'\r\n        }}\r\n      >\r\n        <Col>\r\n          <h3 id=\"catTitle\">All Courses</h3>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Select\r\n            defaultValue=\"Sort By\"\r\n            style={{ width: 120 }}\r\n            onChange={handleChange}\r\n          >\r\n            <Option value=\"default\">Sort</Option>\r\n            <Option value=\"ratingDesc\">Rating</Option>\r\n            <Option value=\"priceInc\">Price Increase</Option>\r\n            <Option value=\"priceDecs\">Price Decrease</Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  const renderListCat = () => {\r\n    return (\r\n      <Menu style={{ width: 256 }} mode=\"inline\">\r\n        {categoryList?.length > 0 ? (\r\n          categoryList.map((item, index) => {\r\n            return (\r\n              <SubMenu key={'sub' + index.toString()} title={item.name}>\r\n                {item.subCategory?.length > 0 ? (\r\n                  item.subCategory.map(sub => {\r\n                    return (\r\n                      <Menu.Item key={sub.id.toString()}>{sub.name}</Menu.Item>\r\n                    )\r\n                  })\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </SubMenu>\r\n            )\r\n          })\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {background()}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'flex-start',\r\n          flex: 1,\r\n          backgroundColor: 'white'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            flex: 1\r\n          }}\r\n        >\r\n          {renderHeader()}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              flex: 0.7,\r\n              paddingBlock: '3vh',\r\n              paddingLeft: '5vw',\r\n              paddingRight: '5vw'\r\n            }}\r\n          >\r\n            {renderCourses()}\r\n          </div>\r\n          <div\r\n            style={{\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              display: 'flex',\r\n              flex: 1,\r\n              marginBottom: '2vh'\r\n            }}\r\n          >\r\n            <Pagination\r\n              current={current}\r\n              onChange={setCurrentPage}\r\n              total={50}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-start',\r\n            flex: 0.3,\r\n            backgroundColor: 'white',\r\n            paddingBlock: '3vh'\r\n          }}\r\n        >\r\n          {renderListCat()}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Courses\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\redux\\epics.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\redux\\actions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\constant.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\constant.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\components\\swipeComponent.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\firebaseConfig.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\components\\discoverBtn.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\redux\\actions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\actions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\api.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\addTeacher.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\CourseCard\\index.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\Header\\index.jsx",["245","246"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\Footer\\index.jsx",["247"],"import React from 'react'\r\nimport logo from 'assets/logo.png'\r\nimport { Layout } from 'antd'\r\nconst { Footer } = Layout\r\n\r\nfunction FooterComponent({ children }) {\r\n  return (\r\n    <Footer style={{ backgroundColor: '#212121' }}>\r\n      <img\r\n        src={logo}\r\n        width=\"100\"\r\n        height=\"100\"\r\n        style={{ objectFit: 'contain' }}\r\n      />\r\n      <p>All Right Reserved | COURSEDO 2021</p>\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default FooterComponent\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\CInput\\index.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\Categories\\index.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\constant.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\teacherList.jsx",["248"],"import {\r\n  EyeOutlined,\r\n  LoadingOutlined,\r\n  PlusCircleOutlined\r\n} from '@ant-design/icons'\r\nimport { Button, Space, Spin, Table, Tabs } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { COLOR, ROLES } from 'ultis/functions'\r\nimport { PAGE } from '../constant'\r\nimport '../dashboard.css'\r\nimport { GetUserProfile, GetUsers, SetCurrentPage } from '../redux/actions'\r\nimport AddTeacherModal from './addTeacher'\r\nimport CoursesTab from './coursesTab'\r\nimport ProfileTab from './profileTab'\r\nimport { getColumnSearchProps } from './searchInput'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction TeacherList() {\r\n  const userList = useSelector(state => state.Dashboard.userList)\r\n  const isLoading = useSelector(state => state.Dashboard.isLoading)\r\n  const detailPage = useSelector(state => state.Dashboard.detailPage)\r\n  const userDetail = useSelector(state => state.Dashboard.userDetail)\r\n  const dispatch = useDispatch()\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n\r\n  const [edit, setEdit] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetUsers.get({ role: ROLES.TEACHER }))\r\n  }, [])\r\n\r\n  const onAddNewTeacher = () => {\r\n    setEdit(true)\r\n  }\r\n\r\n  const handleView = record => {\r\n    dispatch(GetUserProfile.get(record.id))\r\n    dispatch(\r\n      SetCurrentPage.get({\r\n        currentPage: PAGE.TEACHER,\r\n        detailPage: PAGE.PROFILE\r\n      })\r\n    )\r\n  }\r\n\r\n  const userColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'id',\r\n        'Enter id to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      sorter: (a, b) => a.id.localeCompare(b.id)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'fullName',\r\n        'Enter name to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Name',\r\n      dataIndex: 'fullName',\r\n      key: 'fullName',\r\n      sorter: (a, b) => a.fullName.localeCompare(b.fullName)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'email',\r\n        'Enter email to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      sorter: (a, b) => a.email.localeCompare(b.email)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'phoneNumber',\r\n        'Enter email to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Phone number',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber)\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EyeOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleView(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (detailPage === PAGE.PROFILE) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\" style={{ alignSelf: 'center' }}>\r\n          Profile\r\n        </span>\r\n        <Tabs defaultActiveKey=\"1\" centered>\r\n          <TabPane tab=\"Information\" key=\"1\">\r\n            <ProfileTab user={userDetail} />\r\n          </TabPane>\r\n          <TabPane tab=\"All courses\" key=\"2\">\r\n            <CoursesTab courseList={userDetail.courses} role={ROLES.TEACHER} />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\">Teachers</span>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusCircleOutlined />}\r\n          style={{ width: 200, marginBottom: 32 }}\r\n          onClick={() => onAddNewTeacher()}\r\n          size=\"large\"\r\n        >\r\n          Add new teacher\r\n        </Button>\r\n        <Table columns={userColumns} dataSource={userList} />\r\n      </div>\r\n      <AddTeacherModal\r\n        visible={edit}\r\n        onClose={() => {\r\n          setEdit(false)\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeacherList\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\studentList.jsx",["249"],"import { EyeOutlined, LoadingOutlined } from '@ant-design/icons'\r\nimport { Space, Spin, Table } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { COLOR, ROLES } from 'ultis/functions'\r\nimport { ACCOUNT_STATUS, PAGE } from '../constant'\r\nimport '../dashboard.css'\r\nimport { GetUserProfile, GetUsers, SetCurrentPage } from '../redux/actions'\r\nimport { getColumnSearchProps } from './searchInput'\r\nimport { Tabs } from 'antd'\r\nimport ProfileTab from './profileTab'\r\nimport CoursesTab from './coursesTab'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction StudentList() {\r\n  const userList = useSelector(state => state.Dashboard.userList)\r\n  const isLoading = useSelector(state => state.Dashboard.isLoading)\r\n  const detailPage = useSelector(state => state.Dashboard.detailPage)\r\n  const userDetail = useSelector(state => state.Dashboard.userDetail)\r\n  const dispatch = useDispatch()\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetUsers.get({ role: `${ROLES.STUDENT},${ROLES.NOT_VERIFIED}` }))\r\n  }, [])\r\n\r\n  const handleView = record => {\r\n    dispatch(GetUserProfile.get(record.id))\r\n    dispatch(\r\n      SetCurrentPage.get({\r\n        currentPage: PAGE.STUDENT,\r\n        detailPage: PAGE.PROFILE\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  }\r\n\r\n  const userColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'id',\r\n        'Enter id to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      sorter: (a, b) => a.id.localeCompare(b.id)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'fullName',\r\n        'Enter name to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Name',\r\n      dataIndex: 'fullName',\r\n      key: 'fullName',\r\n      sorter: (a, b) => a.fullName.localeCompare(b.fullName)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'email',\r\n        'Enter email to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      sorter: (a, b) => a.email.localeCompare(b.email)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'phoneNumber',\r\n        'Enter email to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Phone number',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber)\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'role',\r\n      render: (value, record, index) => {\r\n        switch (value) {\r\n          case ROLES.STUDENT:\r\n            return <span style={{ color: 'green' }}>{'Verified'}</span>\r\n          case ROLES.NOT_VERIFIED:\r\n            return <span style={{ color: 'red' }}>{'Not verified'}</span>\r\n          default:\r\n            return <span />\r\n        }\r\n      },\r\n      filters: ACCOUNT_STATUS,\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.role === value\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EyeOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleView(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (detailPage === PAGE.PROFILE) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\" style={{ alignSelf: 'center' }}>\r\n          Profile\r\n        </span>\r\n        <Tabs defaultActiveKey=\"1\" centered>\r\n          <TabPane tab=\"Information\" key=\"1\">\r\n            <ProfileTab user={userDetail} />\r\n          </TabPane>\r\n          <TabPane tab=\"All courses\" key=\"2\">\r\n            <CoursesTab\r\n              courseList={userDetail.enrollment}\r\n              role={ROLES.STUDENT}\r\n            />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Students</span>\r\n      <Table\r\n        columns={userColumns}\r\n        dataSource={userList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentList\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\categoryList.jsx",["250"],"import {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusCircleOutlined\r\n} from '@ant-design/icons'\r\nimport { Button, Modal, Space, Spin, Table } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { COLOR } from 'ultis/functions'\r\nimport '../dashboard.css'\r\nimport { DeleteCategory, GetAllCategories } from '../redux/actions'\r\nimport AddCategoryModal from './addCategory'\r\nimport { getColumnSearchProps } from './searchInput'\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary1 }} spin />\r\n)\r\n\r\nfunction CategoryList() {\r\n  const categoryList = useSelector(state => state.Dashboard.categoryList)\r\n  const isLoading = useSelector(state => state.Dashboard.isLoading)\r\n  const dispatch = useDispatch()\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n  let realList = []\r\n  categoryList.forEach(item => {\r\n    realList.push({\r\n      name: item.name,\r\n      parent: null,\r\n      id: item.id,\r\n      parentId: item.parentId\r\n    })\r\n    item?.subCategory &&\r\n      item?.subCategory.length > 0 &&\r\n      item?.subCategory.forEach(subCat => {\r\n        realList.push({\r\n          name: subCat.name,\r\n          parent: item.name,\r\n          id: subCat.id,\r\n          parentId: subCat.parentId\r\n        })\r\n      })\r\n  })\r\n  const [edit, setEdit] = useState({ isShow: false, category: null })\r\n\r\n  useEffect(() => {\r\n    dispatch(GetAllCategories.get())\r\n  }, [])\r\n\r\n  const onAddNewCategory = () => {\r\n    setEdit({ isShow: true, category: null })\r\n  }\r\n\r\n  const handleEdit = (value, record) => {\r\n    setEdit({ isShow: true, category: record })\r\n  }\r\n\r\n  const handleDelete = record => {\r\n    Modal.confirm({\r\n      title: 'Confirm',\r\n      icon: <DeleteOutlined style={{ color: COLOR.primary1 }} />,\r\n      content: 'Do you confirm to delete this category?',\r\n      okText: 'Confirm',\r\n      cancelText: 'Cancel',\r\n      centered: true,\r\n      okButtonProps: { style: { backgroundColor: COLOR.primary1 } },\r\n      onOk: () => {\r\n        dispatch(DeleteCategory.get(record.id))\r\n        Modal.destroyAll()\r\n      }\r\n    })\r\n  }\r\n\r\n  const categoryColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'name',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Title',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: (a, b) => a.name.localeCompare(b.name)\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        'parent',\r\n        'Enter title to find',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'Parent',\r\n      dataIndex: 'parent',\r\n      key: 'parent',\r\n      sorter: (a, b) => a.parent.localeCompare(b.parent)\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: '#FF0000' }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chooseContainer\">\r\n        <span className=\"titleTopic\">Categories</span>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusCircleOutlined />}\r\n          style={{ width: 200, marginBottom: 32 }}\r\n          onClick={() => onAddNewCategory()}\r\n          size=\"large\"\r\n        >\r\n          Add new category\r\n        </Button>\r\n        <Table columns={categoryColumns} dataSource={realList} />\r\n      </div>\r\n      <AddCategoryModal\r\n        visible={edit.isShow}\r\n        onClose={() => {\r\n          setEdit({ isShow: false, category: null })\r\n        }}\r\n        category={edit.category}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryList\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\coursesList.jsx",["251"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\searchInput.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\coursesTab.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\CateCard\\index.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\profileTab.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\component\\addCategory.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\redux\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\CreateCourse\\redux\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Dashboard\\redux\\epics.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\epics.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\redux\\epics.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\redux\\actions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\redux\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Profile\\index.jsx",["252","253","254","255","256","257","258","259","260","261"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Profile\\components\\changePassTab.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Profile\\components\\profileTab.jsx",["262","263"],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":34,"column":6,"nodeType":"270","endLine":34,"endColumn":12,"suggestions":"271"},{"ruleId":"268","severity":1,"message":"272","line":42,"column":6,"nodeType":"270","endLine":42,"endColumn":15,"suggestions":"273"},{"ruleId":"268","severity":1,"message":"269","line":25,"column":6,"nodeType":"270","endLine":25,"endColumn":12,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":133,"column":21,"nodeType":"277","endLine":133,"endColumn":36},{"ruleId":"268","severity":1,"message":"269","line":33,"column":6,"nodeType":"270","endLine":33,"endColumn":12,"suggestions":"278"},{"ruleId":"275","severity":1,"message":"276","line":116,"column":21,"nodeType":"277","endLine":116,"endColumn":36},{"ruleId":"268","severity":1,"message":"279","line":66,"column":6,"nodeType":"270","endLine":66,"endColumn":8,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":81,"column":9,"nodeType":"283","messageId":"284","endLine":81,"endColumn":24},{"ruleId":"268","severity":1,"message":"285","line":15,"column":6,"nodeType":"270","endLine":15,"endColumn":8,"suggestions":"286"},{"ruleId":"268","severity":1,"message":"287","line":26,"column":6,"nodeType":"270","endLine":26,"endColumn":12,"suggestions":"288"},{"ruleId":"268","severity":1,"message":"269","line":24,"column":6,"nodeType":"270","endLine":24,"endColumn":12,"suggestions":"289"},{"ruleId":"268","severity":1,"message":"272","line":23,"column":6,"nodeType":"270","endLine":23,"endColumn":8,"suggestions":"290"},{"ruleId":"281","severity":1,"message":"291","line":17,"column":9,"nodeType":"283","messageId":"284","endLine":17,"endColumn":17},{"ruleId":"281","severity":1,"message":"292","line":12,"column":9,"nodeType":"283","messageId":"284","endLine":12,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":96,"column":13,"nodeType":"295","endLine":96,"endColumn":74},{"ruleId":"296","severity":1,"message":"297","line":9,"column":7,"nodeType":"295","endLine":14,"endColumn":9},{"ruleId":"268","severity":1,"message":"272","line":38,"column":6,"nodeType":"270","endLine":38,"endColumn":8,"suggestions":"298"},{"ruleId":"268","severity":1,"message":"272","line":33,"column":6,"nodeType":"270","endLine":33,"endColumn":8,"suggestions":"299"},{"ruleId":"268","severity":1,"message":"272","line":50,"column":6,"nodeType":"270","endLine":50,"endColumn":8,"suggestions":"300"},{"ruleId":"268","severity":1,"message":"272","line":25,"column":6,"nodeType":"270","endLine":25,"endColumn":8,"suggestions":"301"},{"ruleId":"281","severity":1,"message":"302","line":1,"column":10,"nodeType":"283","messageId":"284","endLine":1,"endColumn":21},{"ruleId":"281","severity":1,"message":"303","line":2,"column":10,"nodeType":"283","messageId":"284","endLine":2,"endColumn":15},{"ruleId":"281","severity":1,"message":"304","line":2,"column":17,"nodeType":"283","messageId":"284","endLine":2,"endColumn":21},{"ruleId":"281","severity":1,"message":"305","line":2,"column":23,"nodeType":"283","messageId":"284","endLine":2,"endColumn":28},{"ruleId":"281","severity":1,"message":"306","line":3,"column":17,"nodeType":"283","messageId":"284","endLine":3,"endColumn":26},{"ruleId":"281","severity":1,"message":"307","line":3,"column":28,"nodeType":"283","messageId":"284","endLine":3,"endColumn":34},{"ruleId":"281","severity":1,"message":"308","line":3,"column":36,"nodeType":"283","messageId":"284","endLine":3,"endColumn":44},{"ruleId":"281","severity":1,"message":"309","line":5,"column":17,"nodeType":"283","messageId":"284","endLine":5,"endColumn":22},{"ruleId":"281","severity":1,"message":"310","line":13,"column":7,"nodeType":"283","messageId":"284","endLine":13,"endColumn":18},{"ruleId":"281","severity":1,"message":"291","line":19,"column":9,"nodeType":"283","messageId":"284","endLine":19,"endColumn":17},{"ruleId":"281","severity":1,"message":"311","line":8,"column":10,"nodeType":"283","messageId":"284","endLine":8,"endColumn":16},{"ruleId":"281","severity":1,"message":"312","line":8,"column":18,"nodeType":"283","messageId":"284","endLine":8,"endColumn":25},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["315"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["316"],["317"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["318"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'user'. Either include them or remove the dependency array.",["319"],"no-unused-vars","'handleUploadImg' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["321"],["322"],["323"],"'dispatch' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["324"],["325"],["326"],["327"],"'EyeOutlined' is defined but never used.","'Space' is defined but never used.","'Spin' is defined but never used.","'Table' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'ROLES' is defined but never used.","'loadingIcon' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"328","fix":"332"},{"desc":"328","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"328","fix":"340"},{"desc":"341","fix":"342"},{"desc":"341","fix":"343"},{"desc":"341","fix":"344"},{"desc":"341","fix":"345"},{"desc":"341","fix":"346"},"Update the dependencies array to be: [history, user]",{"range":"347","text":"348"},"Update the dependencies array to be: [dispatch, history]",{"range":"349","text":"350"},{"range":"351","text":"348"},{"range":"352","text":"348"},"Update the dependencies array to be: [dispatch, history, user]",{"range":"353","text":"354"},"Update the dependencies array to be: [dispatch, token]",{"range":"355","text":"356"},"Update the dependencies array to be: [history, token, user]",{"range":"357","text":"358"},{"range":"359","text":"348"},"Update the dependencies array to be: [dispatch]",{"range":"360","text":"361"},{"range":"362","text":"361"},{"range":"363","text":"361"},{"range":"364","text":"361"},{"range":"365","text":"361"},[1256,1262],"[history, user]",[1401,1410],"[dispatch, history]",[844,850],[1025,1031],[2178,2180],"[dispatch, history, user]",[448,450],"[dispatch, token]",[902,908],"[history, token, user]",[820,826],[836,838],"[dispatch]",[1370,1372],[1365,1367],[1580,1582],[974,976]]