[{"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\index.js":"1","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\App.js":"2","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\reportWebVitals.js":"3","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\store.js":"4","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\functions.js":"5","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\epic.js":"6","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\reducer.js":"7","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\index.jsx":"8","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\index.jsx":"9","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignUp\\index.jsx":"10","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\epics.js":"11","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\reducer.js":"12","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\actions.js":"13","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\api.js":"14","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\GlobalModal\\index.js":"15"},{"size":1271,"mtime":1607884164610,"results":"16","hashOfConfig":"17"},{"size":471,"mtime":1607877960864,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1607629974841,"results":"19","hashOfConfig":"17"},{"size":1047,"mtime":1598279743963,"results":"20","hashOfConfig":"17"},{"size":705,"mtime":1607627293216,"results":"21","hashOfConfig":"17"},{"size":154,"mtime":1607624858649,"results":"22","hashOfConfig":"17"},{"size":306,"mtime":1607624877659,"results":"23","hashOfConfig":"17"},{"size":4912,"mtime":1607626345944,"results":"24","hashOfConfig":"17"},{"size":788,"mtime":1607885653972,"results":"25","hashOfConfig":"17"},{"size":7467,"mtime":1607628161757,"results":"26","hashOfConfig":"17"},{"size":3974,"mtime":1607884514902,"results":"27","hashOfConfig":"17"},{"size":452,"mtime":1607625841552,"results":"28","hashOfConfig":"17"},{"size":984,"mtime":1599138345558,"results":"29","hashOfConfig":"17"},{"size":1806,"mtime":1598279584112,"results":"30","hashOfConfig":"17"},{"size":2374,"mtime":1607885626325,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1unttm2",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\index.js",["67"],"import { ConfigProvider } from 'antd'\nimport viVN from 'antd/es/locale/vi_VN'\nimport GlobalModal, { ModalProvider } from 'components/GlobalModal'\nimport { persistor, store } from 'core/store'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider locale={viVN}>\n        <PersistGate loading={null} persistor={persistor}>\n          <IconContext.Provider\n            value={{\n              className: 'react-icon-clasname',\n              style: { verticalAlign: 'middle' }\n            }}\n          >\n            <App />\n            <GlobalModal />\n          </IconContext.Provider>\n        </PersistGate>\n      </ConfigProvider>\n      >\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n",["68","69"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\App.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\reportWebVitals.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\store.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\functions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\epic.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\core\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\index.jsx",["70"],"import { Button, Input } from 'antd'\r\nimport { Form, Formik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { COLOR } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport { SignInRequest } from './redux/actions'\r\nimport './signin.css'\r\n\r\nfunction SignIn() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (history.location.state) {\r\n        history.goBack()\r\n      } else {\r\n        history.replace('/')\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Vui lòng nhập mật khẩu')\r\n      .min(8, 'Mật khẩu gồm 8 kí tự trở lên')\r\n      .max(48, 'Mật khẩu không vượt quá 48 kí tự')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Mật khẩu phải gồm 8 kí tự'\r\n      }),\r\n    email: yup\r\n      .string()\r\n      .label('Email')\r\n      .email('Email hiện tại không hợp lệ')\r\n      .required('* Vui lòng nhập email')\r\n  })\r\n\r\n  const handleLogin = values => {\r\n    dispatch(\r\n      SignInRequest.get({ ...values, email: values.email.toLowerCase() })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleLogin(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <span className=\"dimoName\">coursedo</span>\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <span id=\"loginStyle\">Đăng nhập</span>\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleLogin(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <Input\r\n                    id=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                  />\r\n                  {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                  <Input\r\n                    id=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Mật khẩu\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                  />\r\n                  {errors.password && (\r\n                    <span id=\"errorStyle\">{errors.password}</span>\r\n                  )}\r\n                  <div className=\"buttomBox\">\r\n                    <Button onClick={() => history.push('/forgot')}>\r\n                      Quên mật khẩu\r\n                    </Button>\r\n                    <div>\r\n                      <span>Chưa có tài khoản?</span>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={() => history.push('/signup')}\r\n                      >\r\n                        Đăng ký\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    style={{\r\n                      backgroundColor: isValid ? COLOR.primary : COLOR.gray\r\n                    }}\r\n                    onClick={handleSubmit}\r\n                    size={'large'}\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\">\r\n          <span className=\"tagline\">Vào bếp không khó</span>\r\n          <span className=\"tagline\">Có Lemon-aid lo</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\Home\\index.jsx",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignUp\\index.jsx",["71","72","73"],"import { Form, Formik } from 'formik'\r\nimport { SignUpRequest } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { COLOR } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport { Button, Input } from 'antd'\r\n\r\nfunction SignUp() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email không được quá 48 kí tự')\r\n      .label('Email')\r\n      .email('Email không hợp lệ')\r\n      .required('* Vui lòng nhập email'),\r\n    password: yup\r\n      .string()\r\n      .required('* Vui lòng nhập mật khẩu')\r\n      .min(8, 'Mật khẩu gồm 8 kí tự trở lên')\r\n      .max(48, 'Mật khẩu không vượt quá 48 kí tự')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Mật khẩu phải gồm 8 kí tự'\r\n      }),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required('* Vui lòng nhập lại mật khẩu')\r\n      .oneOf(\r\n        [yup.ref('password'), null],\r\n        'Mật khẩu nhập lại phải khớp với mật khẩu đã nhập'\r\n      ),\r\n    username: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập tên đăng nhập')\r\n      .min(3, 'Tên đăng nhập từ 3 kí tự trở lên')\r\n      .max(16, 'Tên đăng nhập không được quá 16 kí tự')\r\n      .matches(\r\n        /(?=[a-zA-Z0-9._]{3,16}$)(?!.*[_.]{2})[^_.].*[^_.]$/,\r\n        'Tên đăng nhập không hợp lệ'\r\n      )\r\n  })\r\n\r\n  const handleSignup = values => {\r\n    dispatch(\r\n      SignUpRequest.get({\r\n        ...values,\r\n        username: values.username.toLowerCase(),\r\n        email: values.email.toLowerCase()\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleSignup(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\" style={{ paddingBottom: 20 }}>\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <span className=\"dimoName\">Lemon-aid</span>\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <span id=\"loginStyle\">Đăng ký</span>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              confirmPassword: '',\r\n              username: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleSignup(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                // của material ui chưa đổi, tự đổi hén\r\n                <Form className=\"formStyle\">\r\n                  {/* <CTextField\r\n                    helperText={errors.username && errors.username}\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Tên đăng nhập\"\r\n                    variant=\"outlined\"\r\n                    value={values.username}\r\n                    onChange={handleChange('username')}\r\n                    onTouchStart={() => setFieldTouched('username')}\r\n                    onBlur={handleBlur('username')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                    autoFocus\r\n                  />\r\n                  <CTextField\r\n                    helperText={errors.email && errors.email}\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                  />\r\n                  <CTextField\r\n                    helperText={errors.password && errors.password}\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                    type=\"password\"\r\n                  />\r\n                  <CTextField\r\n                    helperText={\r\n                      errors.confirmPassword && errors.confirmPassword\r\n                    }\r\n                    FormHelperTextProps={{ classes: helperTextStyle }}\r\n                    label=\"Nhập lại mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('confirmPassword')}\r\n                    onTouchStart={() => setFieldTouched('confirmPassword')}\r\n                    value={values.confirmPassword}\r\n                    onBlur={handleBlur('confirmPassword')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    style={styles.input}\r\n                    type=\"password\"\r\n                  /> */}\r\n                  <div style={{ alignSelf: 'flex-end' }}>\r\n                    <span>Đã có tài khoản?</span>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/signup` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Đăng nhập\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    style={{\r\n                      backgroundColor: isValid\r\n                        ? COLOR.primary\r\n                        : COLOR.deactiveGray\r\n                    }}\r\n                    onClick={handleSubmit}\r\n                    size={'large'}\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\">\r\n          {/* <img src={require('../../assets/signin_img.svg')} alt=\"img\" /> */}\r\n          <span className=\"tagline\">Vào bếp không khó</span>\r\n          <span className=\"tagline\">Có Lemon-aid lo</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\epics.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\reducer.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\pages\\SignIn\\redux\\actions.js",[],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\ultis\\api.js",[],["74","75"],"D:\\DH\\Nam4.HK1\\WNC\\coursedo\\src\\components\\GlobalModal\\index.js",[],{"ruleId":"76","severity":1,"message":"77","line":3,"column":23,"nodeType":"78","messageId":"79","endLine":3,"endColumn":36},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":26,"column":6,"nodeType":"86","endLine":26,"endColumn":12,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"88","line":10,"column":18,"nodeType":"78","messageId":"79","endLine":10,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":22,"column":6,"nodeType":"86","endLine":22,"endColumn":12,"suggestions":"89"},{"ruleId":"76","severity":1,"message":"90","line":69,"column":9,"nodeType":"78","messageId":"79","endLine":69,"endColumn":23},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},"no-unused-vars","'ModalProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'Input' is defined but never used.",["96"],"'handleKeyPress' is assigned a value but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [history, user]",{"range":"100","text":"101"},{"range":"102","text":"101"},[796,802],"[history, user]",[725,731]]